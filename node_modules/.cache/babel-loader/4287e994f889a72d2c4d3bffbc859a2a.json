{"ast":null,"code":"import _slicedToArray from \"/Users/pcclarke/Documents/GitHub/civ-techs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js\";\nimport React, { useState } from 'react';\nimport { getLeadsTo, getTechById, getTechPrereqs } from '../libs/dataTools.js';\nimport { setupData } from '../libs/setupData.js';\nimport { setImageLink, oxfordizer } from '../libs/stringTools.js';\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { arc as d3_arc } from 'd3-shape';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport RequirementsModal from './RequirementsModal.js';\nimport startSlice from '../img/startSlice.png';\nconst dataTypes = ['units', 'buildings', 'religions', 'build', 'resources', 'projects', 'promotions', 'civics'];\n\nfunction Wheel(props) {\n  const arcSpace = props.arcSpace,\n        gameData = props.gameData,\n        empire = props.empire,\n        game = props.game;\n  const angleShift = 2;\n  const arcBaseRadius = 100;\n  const arcStrokeWidth = 1.5;\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  },\n        width = 1200 - margin.left - margin.right,\n        height = 1200 - margin.top - margin.bottom;\n  const data = setupData(gameData, +game[3], dataTypes);\n  console.log(data);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFaded = _useState2[0],\n        setNotFaded = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tempArcs = _useState4[0],\n        setTempArcs = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notUnlockFaded = _useState6[0],\n        setNotUnlockFaded = _useState6[1];\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        displayModal = _React$useState2[0],\n        setDisplayModal = _React$useState2[1];\n\n  const _React$useState3 = React.useState({}),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        modalInfo = _React$useState4[0],\n        setModalInfo = _React$useState4[1];\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n  const arc = d3_arc().innerRadius(d => arcBaseRadius + arcSpace * d.arcRank).outerRadius(d => arcBaseRadius + arcStrokeWidth + arcSpace * d.arcRank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcDist);\n  const unlockArc = d3_arc().innerRadius(d => arcBaseRadius + 342.5 + 14 * d.rank).outerRadius(d => arcBaseRadius + 342.6 + arcStrokeWidth + 14 * d.rank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcEnd);\n\n  const updateDataFade = d => {\n    let minRank = 50;\n    let updateNotFaded = getTechPrereqs(d, data);\n    console.log(updateNotFaded);\n    console.log(data);\n    let updateTempArcs = updateNotFaded.map(n => {\n      let tempDist;\n      let tempBack;\n\n      if (d.pos > n.pos) {\n        tempDist = (d.pos - n.pos) * (2 * Math.PI / data.displayed.length);\n        tempBack = 0;\n      } else if (d.pos < n.pos) {\n        tempDist = 0;\n        tempBack = (d.pos - n.pos) * (2 * Math.PI / data.displayed.length);\n      } else if (d.pos === n.pos) {\n        tempDist = n.arcDist;\n        tempBack = n.arcBack;\n      }\n\n      let lopt = [];\n\n      if (n.id === d.id) {\n        lopt = d.lopt;\n      } else {\n        n.lopt.forEach(o => {\n          if (o.id === d.id) {\n            lopt.push(o);\n          }\n        });\n      }\n\n      let lreq = [];\n\n      if (n.id === d.id) {\n        lreq = d.lreq;\n      } else {\n        n.lreq.forEach(r => {\n          if (r.id === d.id) {\n            lreq.push(r);\n          }\n        });\n      }\n\n      let spokeRank = 50;\n\n      if (d.pos === n.pos) {\n        spokeRank = minRank;\n      } else {\n        lopt.forEach(o => {\n          if (o.arcRank < spokeRank) {\n            spokeRank = o.arcRank;\n          }\n        });\n        lreq.forEach(r => {\n          if (r.arcRank < spokeRank) {\n            spokeRank = r.arcRank;\n          }\n        });\n      }\n\n      if (spokeRank < minRank) {\n        minRank = spokeRank;\n      }\n\n      return {\n        arcBack: tempBack,\n        arcDist: tempDist,\n        arcRank: n.arcRank,\n        id: n.id,\n        lopt: lopt,\n        lreq: lreq,\n        pos: n.pos,\n        spokeRank: spokeRank,\n        unlocks: n.unlocks\n      };\n    });\n    updateNotFaded = updateNotFaded.concat(d);\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed));\n    updateTempArcs.push(d);\n    getLeadsTo(d, data.displayed).forEach(l => {\n      updateTempArcs.push({\n        arcBack: 0,\n        arcDist: 0,\n        arcRank: 0,\n        id: l.id,\n        lopt: [],\n        lreq: [],\n        pos: l.pos,\n        spokeRank: d.arcRank,\n        unlocks: l.unlocks\n      });\n    });\n    setNotFaded(updateNotFaded);\n    setTempArcs(updateTempArcs);\n  };\n\n  const setFade = d => {\n    if (notFaded.length > 0) {\n      const notFadedIds = notFaded.map(n => n.id);\n\n      if (notFadedIds.indexOf(d.id) < 0) {\n        return 'fade';\n      }\n    }\n\n    return '';\n  };\n\n  const updateUnlockFade = u => {\n    if (u) {\n      setNotUnlockFaded(u);\n    } else {\n      setNotUnlockFaded(null);\n    }\n  };\n\n  const setUnlockFade = u => {\n    if (notUnlockFaded) {\n      return u === notUnlockFaded ? '' : 'fade';\n    }\n  };\n\n  function displayUnlockModal(reference, data) {\n    let requirements = [];\n    reference.requires.forEach(requirementId => {\n      requirements.push(getTechById(requirementId, data).name);\n    });\n    let prepModalInfo = {\n      imagePath: setImageLink(reference, game, empire),\n      requirements: oxfordizer(requirements, 'and'),\n      title: reference.name ? reference.name : reference[empire].name\n    };\n\n    if (reference.optional) {\n      let optionals = [];\n      reference.optional.forEach(optionalId => {\n        optionals.push(getTechById(optionalId, data).name);\n      });\n      prepModalInfo.optionals = oxfordizer(optionals, 'or');\n    }\n\n    if (reference.lreq) {\n      let leadsRequirements = [];\n      reference.lreq.forEach(leadsReq => {\n        leadsRequirements.push(getTechById(leadsReq.id, data).name);\n      });\n      prepModalInfo.leadsRequirements = oxfordizer(leadsRequirements, 'and');\n    }\n\n    if (reference.lopt) {\n      let leadsOptionals = [];\n      reference.lopt.forEach(leadsOpt => {\n        leadsOptionals.push(getTechById(leadsOpt.id, data).name);\n      });\n      prepModalInfo.leadsOptionals = oxfordizer(leadsOptionals, 'and');\n    }\n\n    setModalInfo(prepModalInfo);\n    setDisplayModal(true);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"civTechs\",\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"wheel\",\n    transform: \"translate(\".concat(width / 2, \", \").concat(height / 2, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"image\", {\n    id: \"startSlice\",\n    x: 0,\n    y: -(height / 2),\n    width: 167,\n    height: height / 2,\n    xlinkHref: startSlice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), notFaded.length > 0 && tempArcs.length > 0 && React.createElement(\"g\", {\n    className: \"tempArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, tempArcs.map((t, i) => React.createElement(\"g\", {\n    className: \"temp-spokes\",\n    key: \"temp-spokes-\".concat(i),\n    transform: \"rotate(\".concat(t.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine\",\n    x1: 0,\n    y1: -(arcBaseRadius + arcSpace * t.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - t.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }))), tempArcs.filter(t => t.lopt.length > 0 || t.lreq.length > 0).map((t, i) => React.createElement(\"g\", {\n    className: \"tempGroup\",\n    key: \"temp-arcs-\".concat(i),\n    transform: \"rotate(\".concat(t.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"tempArc\",\n    d: arc(t),\n    fill: color(t.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"tempSpokePin\",\n    x1: 0,\n    y1: -(arcBaseRadius + 7 + arcSpace * t.arcRank),\n    x2: 0,\n    y2: -(arcBaseRadius - 5 + arcSpace * t.arcRank),\n    strokeWidth: arcStrokeWidth,\n    stroke: color(t.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), t.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"tempReqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBaseRadius - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }))), t.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBaseRadius - 2.5 - arcSpace * o.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"spokeAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" spoke\"),\n    key: \"spoke-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine \".concat(notFaded.length > 0 ? 'fade' : ''),\n    x1: 0,\n    y1: !d.requires && !d.optional ? 0 : -(arcBaseRadius + arcSpace * d.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - d.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }), React.createElement(\"image\", {\n    className: \"techImg \".concat(setFade(d)),\n    height: 25,\n    onClick: () => displayUnlockModal(d, data),\n    onMouseLeave: () => setNotFaded([]),\n    onMouseOver: () => updateDataFade(d),\n    transform: (() => d.pos > data.displayed.length / 2 ? \"translate(10, \".concat(-(width / 2) + 157, \") rotate(90)\") : \"translate(-10, \".concat(-(width / 2) + 182, \") rotate(270)\"))(),\n    width: 25,\n    xlinkHref: \"/\".concat(game, \"/\").concat(d.cat, \"/\").concat(d.id, \".png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }), d.unlocks.map((u, j) => React.createElement(\"g\", {\n    key: \"unlock-\".concat(j),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, u.lreq && React.createElement(\"g\", {\n    className: \"unlock \".concat(notUnlockFaded === u.ref.id ? '' : 'opaque', \" \").concat(u.ref.id).concat(u.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"unlockArc\",\n    rank: u.rank,\n    fill: color(u.pos),\n    d: unlockArc(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }), u.lreq.map((l, k) => React.createElement(\"g\", {\n    className: \"unlockSquare\",\n    key: \"unlock-square-\".concat(k),\n    transform: \"rotate(\".concat(l.dist * (360 / data.displayed.length), \") translate(0, \").concat(-(width / 2) + 145 - 14 * l.arcRank, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(l.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  })))), React.createElement(\"image\", {\n    className: \"unlockIcon \".concat(setFade(d), \" \").concat(setUnlockFade(u.ref.id)),\n    height: 13,\n    onClick: () => displayUnlockModal(u.ref, data),\n    onMouseLeave: () => updateUnlockFade(),\n    onMouseOver: () => updateUnlockFade(u.ref.id),\n    transform: (() => u.pos > data.displayed.length / 2 ? \"translate(6, \".concat(-(width / 2) + (142 - 14 * u.rank), \") rotate(90)\") : \"translate(-6, \".concat(-(width / 2) + (153 - 14 * u.rank), \") rotate(270)\"))(),\n    width: 13,\n    xlinkHref: (() => setImageLink(u.ref, game, empire))(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"reqArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" reqGroup \").concat(notFaded.length > 0 ? 'fade' : ''),\n    key: \"req-arcs-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"spokeArc\",\n    d: arc(d),\n    fill: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"spokePin\",\n    x1: 0,\n    y1: -(arcBaseRadius + 7 + arcSpace * d.arcRank),\n    x2: 0,\n    y2: -(arcBaseRadius - 5 + arcSpace * d.arcRank),\n    strokeWidth: arcStrokeWidth,\n    stroke: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }), d.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"reqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n\n      if (d.id === 'TECH_FISHING') {}\n\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBaseRadius - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }))), d.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBaseRadius - 2.5 - arcSpace * o.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  })))))), React.createElement(\"image\", {\n    x: -75,\n    y: -75,\n    width: 150,\n    height: 150,\n    xlinkHref: \"\".concat(game, \"/\").concat(game, \"-center.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  })))), React.createElement(RequirementsModal, {\n    close: () => setDisplayModal(false),\n    display: displayModal,\n    imagePath: modalInfo.imagePath,\n    leadsRequirements: modalInfo.leadsRequirements,\n    leadsOptionals: modalInfo.leadsOptionals,\n    optionals: modalInfo.optionals,\n    requirements: modalInfo.requirements,\n    title: modalInfo.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }));\n}\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js"],"names":["React","useState","getLeadsTo","getTechById","getTechPrereqs","setupData","setImageLink","oxfordizer","scaleOrdinal","d3_scaleOrdinal","arc","d3_arc","schemeCategory10","d3_schemeCategory10","RequirementsModal","startSlice","dataTypes","Wheel","props","arcSpace","gameData","empire","game","angleShift","arcBaseRadius","arcStrokeWidth","margin","top","right","bottom","left","width","height","data","console","log","notFaded","setNotFaded","tempArcs","setTempArcs","notUnlockFaded","setNotUnlockFaded","displayModal","setDisplayModal","modalInfo","setModalInfo","color","innerRadius","d","arcRank","outerRadius","startAngle","arcBack","endAngle","arcDist","unlockArc","rank","arcEnd","updateDataFade","minRank","updateNotFaded","updateTempArcs","map","n","tempDist","tempBack","pos","Math","PI","displayed","length","lopt","id","forEach","o","push","lreq","r","spokeRank","unlocks","concat","l","setFade","notFadedIds","indexOf","updateUnlockFade","u","setUnlockFade","displayUnlockModal","reference","requirements","requires","requirementId","name","prepModalInfo","imagePath","title","optional","optionals","optionalId","leadsRequirements","leadsReq","leadsOptionals","leadsOpt","t","i","filter","j","ang","dist","cat","ref","k"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {\n  getLeadsTo,\n  getTechById,\n  getTechPrereqs\n} from '../libs/dataTools.js';\nimport {setupData} from '../libs/setupData.js';\nimport {setImageLink, oxfordizer} from '../libs/stringTools.js';\n\nimport {scaleOrdinal as d3_scaleOrdinal} from 'd3-scale';\nimport {arc as d3_arc} from 'd3-shape';\nimport {schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\n\nimport RequirementsModal from './RequirementsModal.js';\n\nimport startSlice from '../img/startSlice.png';\n\nconst dataTypes = [\n  'units',\n  'buildings',\n  'religions',\n  'build',\n  'resources',\n  'projects',\n  'promotions',\n  'civics',\n];\n\nfunction Wheel(props) {\n  const {\n    arcSpace,\n    gameData,\n    empire,\n    game,\n  } = props;\n\n  const angleShift = 2;\n  const arcBaseRadius = 100;\n  const arcStrokeWidth = 1.5;\n  const margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 1200 - margin.left - margin.right,\n    height = 1200 - margin.top - margin.bottom;\n\n  const data = setupData(gameData, +(game[3]), dataTypes);\n  console.log(data);\n\n  const [notFaded, setNotFaded] = useState([]);\n  const [tempArcs, setTempArcs] = useState([]);\n  const [notUnlockFaded, setNotUnlockFaded] = useState(null);\n  const [displayModal, setDisplayModal] = React.useState(false);\n  const [modalInfo, setModalInfo] = React.useState({});\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n\n  const arc = d3_arc()\n    .innerRadius((d) => arcBaseRadius + (arcSpace * d.arcRank))\n    .outerRadius((d) => (arcBaseRadius + arcStrokeWidth) + (arcSpace * d.arcRank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcDist);\n\n  const unlockArc = d3_arc()\n    .innerRadius((d) => arcBaseRadius + 342.5 + (14 * d.rank))\n    .outerRadius((d) => (arcBaseRadius + 342.6 + arcStrokeWidth) + (14 * d.rank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcEnd);\n\n  const updateDataFade = (d) => {\n    let minRank = 50;\n    let updateNotFaded = getTechPrereqs(d, data);\n\n    console.log(updateNotFaded);\n    console.log(data);\n\n    let updateTempArcs = updateNotFaded.map((n) => {\n      let tempDist;\n      let tempBack;\n      if (d.pos > n.pos) {\n        tempDist = (d.pos - n.pos) * ((2 * Math.PI) / data.displayed.length);\n        tempBack = 0;\n      } else if (d.pos < n.pos) {\n        tempDist = 0;\n        tempBack = (d.pos - n.pos) * ((2 * Math.PI) / data.displayed.length);\n      } else if (d.pos === n.pos) {\n        tempDist = n.arcDist;\n        tempBack = n.arcBack;\n      }\n\n      let lopt = [];\n      if (n.id === d.id) {\n        lopt = d.lopt;\n      } else {\n        n.lopt.forEach((o) => {\n          if (o.id === d.id) {\n            lopt.push(o);\n          }\n        });\n      }\n\n      let lreq = [];\n      if (n.id === d.id) {\n        lreq = d.lreq;\n      } else {\n        n.lreq.forEach((r) => {\n          if (r.id === d.id) {\n            lreq.push(r);\n          }\n        });\n      }\n\n      let spokeRank = 50;\n\n      if (d.pos === n.pos) {\n        spokeRank = minRank;\n      } else {\n        lopt.forEach((o) => {\n          if (o.arcRank < spokeRank) {\n            spokeRank = o.arcRank;\n          }\n        });\n        lreq.forEach((r) => {\n          if (r.arcRank < spokeRank) {\n            spokeRank = r.arcRank;\n          }\n        });\n      }\n      if (spokeRank < minRank) {\n        minRank = spokeRank;\n      }\n\n      return {\n        arcBack: tempBack,\n        arcDist: tempDist,\n        arcRank: n.arcRank,\n        id: n.id,\n        lopt: lopt,\n        lreq: lreq,\n        pos: n.pos,\n        spokeRank: spokeRank,\n        unlocks: n.unlocks,\n      };\n    });\n    updateNotFaded = updateNotFaded.concat(d);\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed));\n\n    updateTempArcs.push(d);\n    getLeadsTo(d, data.displayed).forEach((l) => {\n      updateTempArcs.push({\n        arcBack: 0,\n        arcDist: 0,\n        arcRank: 0,\n        id: l.id,\n        lopt: [],\n        lreq: [],\n        pos: l.pos,\n        spokeRank: d.arcRank,\n        unlocks: l.unlocks,\n      });\n    });\n\n    setNotFaded(updateNotFaded);\n    setTempArcs(updateTempArcs);\n  };\n\n  const setFade = (d) => {\n    if (notFaded.length > 0) {\n      const notFadedIds = notFaded.map((n) => n.id);\n\n      if (notFadedIds.indexOf(d.id) < 0) {\n        return 'fade';\n      }\n    }\n\n    return '';\n  }\n\n  const updateUnlockFade = (u) => {\n    if (u) {\n      setNotUnlockFaded(u);\n    } else {\n      setNotUnlockFaded(null);\n    }\n  }\n\n  const setUnlockFade = (u) => {\n    if (notUnlockFaded) {\n      return (u === notUnlockFaded) ? '' : 'fade';\n    }\n  }\n\n  function displayUnlockModal(reference, data) {\n    let requirements = [];\n    reference.requires.forEach((requirementId) => {\n      requirements.push(getTechById(requirementId, data).name);\n    });\n\n    let prepModalInfo = {\n      imagePath: setImageLink(reference, game, empire),\n      requirements: oxfordizer(requirements, 'and'),\n      title: (reference.name) ? reference.name: reference[empire].name,\n    };\n\n    if (reference.optional) {\n      let optionals = [];\n      reference.optional.forEach((optionalId) => {\n        optionals.push(getTechById(optionalId, data).name);\n      });\n      prepModalInfo.optionals = oxfordizer(optionals, 'or');\n    }\n\n    if (reference.lreq) {\n      let leadsRequirements = [];\n      reference.lreq.forEach((leadsReq) => {\n        leadsRequirements.push(getTechById(leadsReq.id, data).name);\n      });\n      prepModalInfo.leadsRequirements = oxfordizer(leadsRequirements, 'and');\n    }\n\n    if (reference.lopt) {\n      let leadsOptionals = [];\n      reference.lopt.forEach((leadsOpt) => {\n        leadsOptionals.push(getTechById(leadsOpt.id, data).name);\n      });\n      prepModalInfo.leadsOptionals = oxfordizer(leadsOptionals, 'and');\n    }\n\n    setModalInfo(prepModalInfo);\n\n    setDisplayModal(true);\n  }\n\n  return (\n    <div>\n      <svg\n        width={width + margin.left + margin.right}\n        height={height + margin.top + margin.bottom}\n      >\n        <g\n          className='civTechs'\n          transform={`translate(${margin.left}, ${margin.top})`}\n        >\n          <g\n            className='wheel'\n            transform={`translate(${width / 2}, ${height / 2})`}\n          >\n            <image\n              id='startSlice'\n              x={0}\n              y={-(height/2)}\n              width={167}\n              height={height/2}\n              xlinkHref={startSlice}\n            />\n            {(notFaded.length > 0 && tempArcs.length > 0) &&\n              <g className='tempArcs'>\n                {tempArcs.map((t, i) => (\n                  <g\n                    className='temp-spokes'\n                    key={`temp-spokes-${i}`}\n                    transform={`rotate(${t.pos * (360 / data.displayed.length) + angleShift})`}\n                  >\n                    <line\n                      className='spokeLine'\n                      x1={0}\n                      y1={-(arcBaseRadius + (arcSpace * t.spokeRank))}\n                      x2={0}\n                      y2={-(width / 2) + 160 - (t.unlocks.length * 14)}\n                    />\n                  </g>\n                ))}\n                {tempArcs.filter((t) => t.lopt.length > 0 || t.lreq.length > 0).map((t, i) => (\n                  <g\n                    className='tempGroup'\n                    key={`temp-arcs-${i}`}\n                    transform={`rotate(${t.pos * (360 / data.displayed.length) + angleShift})`}\n                  >\n                    <path\n                      className='tempArc'\n                      d={arc(t)}\n                      fill={color(t.pos)}\n                    />\n                    <line\n                      className='tempSpokePin'\n                      x1={0}\n                      y1={-(arcBaseRadius + 7 + (arcSpace * t.arcRank))}\n                      x2={0}\n                      y2={-(arcBaseRadius - 5 + (arcSpace * t.arcRank))}\n                      strokeWidth={arcStrokeWidth}\n                      stroke={color(t.pos)}\n                    />\n                   {t.lreq.map((r, j) => (\n                      <g\n                        className='tempReqSquare'\n                        key={`req-square-${j}`}\n                        transform={(() => {\n                          const ang = r.dist * (360 / data.displayed.length);\n                          return `rotate(${ang}) translate(0, ${(-arcBaseRadius - 2.5 - (arcSpace * r.arcRank))})`;\n                        })()}\n                      >\n                        <rect\n                          x={-2.5}\n                          y={-0.75}\n                          width={5}\n                          height={5}\n                          fill={color(r.pos)}\n                        />\n                      </g>\n                    ))}\n                    {t.lopt.map((o, j) => (\n                      <g\n                        className='optCircle'\n                        key={`opt-circle-${j}`}\n                        transform={(() => {\n                          const ang = o.dist * (360 / data.displayed.length);\n                          return `rotate(${ang}) translate(0, ${(-arcBaseRadius - 2.5 - (arcSpace * o.arcRank))})`;\n                        })()}\n                      >\n                        <circle\n                          cx={0}\n                          cy={2}\n                          r={2.5}\n                          strokeWidth={1}\n                          stroke={color(o.pos)}\n                          fill='white'\n                        />\n                      </g>\n                    ))}\n                  </g>\n                ))}\n              </g>\n            }\n\n            <g className='spokeAll'>\n              {\n                data.displayed.map((d, i) => (\n                  <g\n                    className={`${d.id} spoke`}\n                    key={`spoke-${i}`}\n                    transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                  >\n                    <line\n                      className={`spokeLine ${(notFaded.length > 0) ? 'fade' : ''}`}\n                      x1={0}\n                      y1={(!d.requires && !d.optional) ? 0 : -(arcBaseRadius + (arcSpace * d.spokeRank))}\n                      x2={0}\n                      y2={-(width / 2) + 160 - (d.unlocks.length * 14)}\n                    />\n                    <image\n                      className={`techImg ${setFade(d)}`}\n                      height={25}\n                      onClick={() => displayUnlockModal(d, data)}\n                      onMouseLeave={() => setNotFaded([])}\n                      onMouseOver={() => updateDataFade(d)}\n                      transform={(() => (d.pos > (data.displayed.length / 2)) ?\n                        `translate(10, ${(-(width / 2) + 157)}) rotate(90)` :\n                        `translate(-10, ${(-(width / 2) + 182)}) rotate(270)`)()}\n                      width={25}\n                      xlinkHref={`/${game}/${d.cat}/${d.id}.png`}\n                    />\n                    {d.unlocks.map((u, j) => (\n                      <g key={`unlock-${j}`}>\n                        {u.lreq &&\n                          <g className={`unlock ${(notUnlockFaded === u.ref.id) ? '' : 'opaque'} ${u.ref.id}${u.pos}`}>\n                            <path\n                              className='unlockArc'\n                              rank={u.rank}\n                              fill={color(u.pos)}\n                              d={unlockArc(u)}\n                            />\n                            {u.lreq.map((l, k) => (\n                              <g\n                                className='unlockSquare'\n                                key={`unlock-square-${k}`}\n                                transform={`rotate(${l.dist * (360 / data.displayed.length)}) translate(0, ${(-(width/2) + 145 - (14 * l.arcRank))})`}\n                              >\n                                <rect\n                                  x={-2.5}\n                                  y={-0.75}\n                                  width={5}\n                                  height={5}\n                                  fill={color(l.pos)}\n                                />\n                              </g>\n                            ))}\n                          </g>\n                        }\n                        <image\n                          className={`unlockIcon ${setFade(d)} ${setUnlockFade(u.ref.id)}`}\n                          height={13}\n                          onClick={() => displayUnlockModal(u.ref, data)}\n                          onMouseLeave={() => updateUnlockFade()}\n                          onMouseOver={() => updateUnlockFade(u.ref.id)}\n                          transform={(() => (u.pos > (data.displayed.length / 2)) ?\n                            `translate(6, ${(-(width / 2) + (142 - (14 * u.rank)))}) rotate(90)` :\n                            `translate(-6, ${(-(width / 2) + (153 - (14 * u.rank)))}) rotate(270)`)()}\n                          width={13}\n                          xlinkHref={(() => setImageLink(u.ref, game, empire))()}\n                        />\n                      </g>\n                    ))}\n                  </g>\n                ))\n              }\n            </g>\n\n            <g className='reqArcs'>\n              {data.displayed.map((d, i) => (\n                <g\n                  className={`${d.id} reqGroup ${(notFaded.length > 0) ? 'fade' : ''}`}\n                  key={`req-arcs-${i}`}\n                  transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                >\n                  <path\n                    className='spokeArc'\n                    d={arc(d)}\n                    fill={color(d.pos)}\n                  />\n                  <line\n                    className='spokePin'\n                    x1={0}\n                    y1={-(arcBaseRadius + 7 + (arcSpace * d.arcRank))}\n                    x2={0}\n                    y2={-(arcBaseRadius - 5 + (arcSpace * d.arcRank))}\n                    strokeWidth={arcStrokeWidth}\n                    stroke={color(d.pos)}\n                  />\n                  {d.lreq.map((r, j) => (\n                    <g\n                      className='reqSquare'\n                      key={`req-square-${j}`}\n                      transform={(() => {\n\n                        const ang = r.dist * (360 / data.displayed.length);\n                        if (d.id === 'TECH_FISHING') {\n                        }\n                        return `rotate(${ang}) translate(0, ${(-arcBaseRadius - 2.5 - (arcSpace * r.arcRank))})`;\n                      })()}\n                    >\n                      <rect\n                        x={-2.5}\n                        y={-0.75}\n                        width={5}\n                        height={5}\n                        fill={color(r.pos)}\n                      />\n                    </g>\n                  ))}\n                  {d.lopt.map((o, j) => (\n                    <g\n                      className='optCircle'\n                      key={`opt-circle-${j}`}\n                      transform={(() => {\n                        const ang = o.dist * (360 / data.displayed.length);\n                        return `rotate(${ang}) translate(0, ${(-arcBaseRadius - 2.5 - (arcSpace * o.arcRank))})`;\n                      })()}\n                    >\n                      <circle\n                        cx={0}\n                        cy={2}\n                        r={2.5}\n                        strokeWidth={1}\n                        stroke={color(o.pos)}\n                        fill='white'\n                      />\n                    </g>\n                  ))}\n                </g>\n              ))}\n            </g>\n\n            <image\n              x={-75}\n              y={-75}\n              width={150}\n              height={150}\n              xlinkHref={`${game}/${game}-center.png`}\n            />\n          </g>\n        </g>\n      </svg>\n\n      <RequirementsModal\n        close={() => setDisplayModal(false)}\n        display={displayModal}\n        imagePath={modalInfo.imagePath}\n        leadsRequirements={modalInfo.leadsRequirements}\n        leadsOptionals={modalInfo.leadsOptionals}\n        optionals={modalInfo.optionals}\n        requirements={modalInfo.requirements}\n        title={modalInfo.title}\n      />\n    </div>\n  );\n}\n\nexport default Wheel;\n"]},"metadata":{},"sourceType":"module"}