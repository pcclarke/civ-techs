{"ast":null,"code":"import _slicedToArray from \"/Users/pcclarke/Documents/GitHub/civ-techs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js\";\nimport React, { useState } from 'react';\nimport { getLeadsTo, getTechById, getTechPrereqs } from '../libs/dataTools.js';\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { arc as d3_arc } from 'd3-shape';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport RequirementsModal from './RequirementsModal.js';\nimport startSlice from '../img/startSlice.png';\n\nconst setImageLink = function (reference, game, empire) {\n  let link = '';\n\n  if ((reference.cat === 'units' || reference.cat === 'buildings') && !(game === 'civ1' || game === 'civ2')) {\n    if (reference[empire]) {\n      link = \"\".concat(game, \"/\").concat(reference.cat, \"/\").concat(reference[empire].id, \".png\");\n    } else {\n      link = \"\".concat(game, \"/\").concat(reference.cat, \"/\").concat(reference.CIVILIZATION_ALL.id, \".png\");\n    }\n  } else {\n    link = \"\".concat(game, \"/\").concat(reference.cat, \"/\").concat(reference.id, \".png\");\n  }\n\n  return link;\n};\n\nconst oxfordizer = function (words, conjunction) {\n  let sentence = '';\n\n  if (words.length === 1) {\n    sentence = words[0];\n  } else if (words.length === 2) {\n    sentence = \"\".concat(words[0], \" \").concat(conjunction, \" \").concat(words[1]);\n  } else if (words.length >= 3) {\n    sentence = words[0];\n\n    for (let i = 1; i < words.length - 1; i++) {\n      sentence = \"\".concat(sentence, \", \").concat(words[i]);\n    }\n\n    sentence = \"\".concat(sentence, \", \").concat(conjunction, \" \").concat(words[words.length - 1]);\n  }\n\n  return sentence;\n};\n\nfunction Wheel(props) {\n  const angleShift = props.angleShift,\n        arcBase = props.arcBase,\n        arcSpace = props.arcSpace,\n        arcWidth = props.arcWidth,\n        data = props.data,\n        empire = props.empire,\n        game = props.game,\n        width = props.width,\n        height = props.height,\n        margin = props.margin;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFaded = _useState2[0],\n        setNotFaded = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tempArcs = _useState4[0],\n        setTempArcs = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notUnlockFaded = _useState6[0],\n        setNotUnlockFaded = _useState6[1];\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        displayModal = _React$useState2[0],\n        setDisplayModal = _React$useState2[1];\n\n  const _React$useState3 = React.useState({}),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        modalInfo = _React$useState4[0],\n        setModalInfo = _React$useState4[1];\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n  const arc = d3_arc().innerRadius(d => arcBase + arcSpace * d.arcRank).outerRadius(d => arcBase + arcWidth + arcSpace * d.arcRank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcDist);\n  const unlockArc = d3_arc().innerRadius(d => arcBase + 342.5 + 14 * d.rank).outerRadius(d => arcBase + 342.6 + arcWidth + 14 * d.rank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcEnd);\n\n  const updateDataFade = d => {\n    let minRank = 50;\n    let updateNotFaded = getTechPrereqs(d, data);\n    let updateTempArcs = updateNotFaded.map(n => {\n      let tempDist;\n      let tempBack;\n\n      if (d.pos > n.pos) {\n        tempDist = (d.pos - n.pos) * (2 * Math.PI / data.displayed.length);\n        tempBack = 0;\n      } else if (d.pos < n.pos) {\n        tempDist = 0;\n        tempBack = (d.pos - n.pos) * (2 * Math.PI / data.displayed.length);\n      } else if (d.pos === n.pos) {\n        tempDist = n.arcDist;\n        tempBack = n.arcBack;\n      }\n\n      let lopt = [];\n\n      if (n.id === d.id) {\n        lopt = d.lopt;\n      } else {\n        n.lopt.forEach(o => {\n          if (o.id === d.id) {\n            lopt.push(o);\n          }\n        });\n      }\n\n      let lreq = [];\n\n      if (n.id === d.id) {\n        lreq = d.lreq;\n      } else {\n        n.lreq.forEach(r => {\n          if (r.id === d.id) {\n            lreq.push(r);\n          }\n        });\n      }\n\n      let spokeRank = 50;\n\n      if (d.pos === n.pos) {\n        spokeRank = minRank;\n      } else {\n        lopt.forEach(o => {\n          if (o.arcRank < spokeRank) {\n            spokeRank = o.arcRank;\n          }\n        });\n        lreq.forEach(r => {\n          if (r.arcRank < spokeRank) {\n            spokeRank = r.arcRank;\n          }\n        });\n      }\n\n      if (spokeRank < minRank) {\n        minRank = spokeRank;\n      }\n\n      return {\n        arcBack: tempBack,\n        arcDist: tempDist,\n        arcRank: n.arcRank,\n        id: n.id,\n        lopt: lopt,\n        lreq: lreq,\n        pos: n.pos,\n        spokeRank: spokeRank,\n        unlocks: n.unlocks\n      };\n    });\n    updateNotFaded = updateNotFaded.concat(d);\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed));\n    updateTempArcs.push(d);\n    getLeadsTo(d, data.displayed).forEach(l => {\n      updateTempArcs.push({\n        arcBack: 0,\n        arcDist: 0,\n        arcRank: 0,\n        id: l.id,\n        lopt: [],\n        lreq: [],\n        pos: l.pos,\n        spokeRank: d.arcRank,\n        unlocks: l.unlocks\n      });\n    });\n    setNotFaded(updateNotFaded);\n    setTempArcs(updateTempArcs);\n  };\n\n  const setFade = d => {\n    if (notFaded.length > 0) {\n      const notFadedIds = notFaded.map(n => n.id);\n\n      if (notFadedIds.indexOf(d.id) < 0) {\n        return 'fade';\n      }\n    }\n\n    return '';\n  };\n\n  const updateUnlockFade = u => {\n    if (u) {\n      setNotUnlockFaded(u);\n    } else {\n      setNotUnlockFaded(null);\n    }\n  };\n\n  const setUnlockFade = u => {\n    if (notUnlockFaded) {\n      return u === notUnlockFaded ? '' : 'fade';\n    }\n  };\n\n  function displayUnlockModal(reference, data) {\n    console.log(data);\n    let requirements = [];\n    reference.requires.forEach(requirementId => {\n      requirements.push(getTechById(requirementId, data).name);\n    });\n    console.log(requirements);\n    console.log(reference);\n    let prepModalInfo = {\n      imagePath: setImageLink(reference, game, empire),\n      requirements: oxfordizer(requirements, 'and'),\n      title: reference.name ? reference.name : reference[empire].name\n    };\n\n    if (reference.optional) {\n      let optionals = [];\n      reference.optional.forEach(optionalId => {\n        optionals.push(getTechById(optionalId, data).name);\n      });\n      prepModalInfo.optionals = oxfordizer(optionals, 'or');\n    }\n\n    if (reference.lreq) {\n      let leadsRequirements = [];\n      reference.lreq.forEach(leadsReq => {\n        leadsRequirements.push(getTechById(leadsReq.id, data).name);\n      });\n      prepModalInfo.leadsRequirements = oxfordizer(leadsRequirements, 'and');\n    }\n\n    if (reference.lopt) {\n      let leadsOptionals = [];\n      reference.lopt.forEach(leadsOpt => {\n        leadsOptionals.push(getTechById(leadsReq.id, data).name);\n      });\n      prepModalInfo.leadsOptionals = oxfordizer(leadsOptionals, 'and');\n    }\n\n    setModalInfo(prepModalInfo);\n    setDisplayModal(true);\n    console.log(modalInfo);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"civTechs\",\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"wheel\",\n    transform: \"translate(\".concat(width / 2, \", \").concat(height / 2, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"image\", {\n    id: \"startSlice\",\n    x: 0,\n    y: -(height / 2),\n    width: 167,\n    height: height / 2,\n    xlinkHref: startSlice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), notFaded.length > 0 && tempArcs.length > 0 && React.createElement(\"g\", {\n    className: \"tempArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, tempArcs.map((t, i) => React.createElement(\"g\", {\n    className: \"temp-spokes\",\n    key: \"temp-spokes-\".concat(i),\n    transform: \"rotate(\".concat(t.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine\",\n    x1: 0,\n    y1: -(arcBase + arcSpace * t.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - t.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }))), tempArcs.filter(t => t.lopt.length > 0 || t.lreq.length > 0).map((t, i) => React.createElement(\"g\", {\n    className: \"tempGroup\",\n    key: \"temp-arcs-\".concat(i),\n    transform: \"rotate(\".concat(t.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"tempArc\",\n    d: arc(t),\n    fill: color(t.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"tempSpokePin\",\n    x1: 0,\n    y1: -(arcBase + 7 + arcSpace * t.arcRank),\n    x2: 0,\n    y2: -(arcBase - 5 + arcSpace * t.arcRank),\n    strokeWidth: arcWidth,\n    stroke: color(t.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }), t.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"tempReqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }))), t.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * o.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"spokeAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" spoke\"),\n    key: \"spoke-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine \".concat(notFaded.length > 0 ? 'fade' : ''),\n    x1: 0,\n    y1: !d.requires && !d.optional ? 0 : -(arcBase + arcSpace * d.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - d.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }), React.createElement(\"image\", {\n    className: \"techImg \".concat(setFade(d)),\n    height: 25,\n    onClick: () => displayUnlockModal(d, data),\n    onMouseLeave: () => setNotFaded([]),\n    onMouseOver: () => updateDataFade(d),\n    transform: (() => d.pos > data.displayed.length / 2 ? \"translate(10, \".concat(-(width / 2) + 157, \") rotate(90)\") : \"translate(-10, \".concat(-(width / 2) + 182, \") rotate(270)\"))(),\n    width: 25,\n    xlinkHref: \"/\".concat(game, \"/\").concat(d.cat, \"/\").concat(d.id, \".png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }), d.unlocks.map((u, j) => React.createElement(\"g\", {\n    key: \"unlock-\".concat(j),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, u.lreq && React.createElement(\"g\", {\n    className: \"unlock \".concat(notUnlockFaded === u.ref.id ? '' : 'opaque', \" \").concat(u.ref.id).concat(u.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"unlockArc\",\n    rank: u.rank,\n    fill: color(u.pos),\n    d: unlockArc(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }), u.lreq.map((l, k) => React.createElement(\"g\", {\n    className: \"unlockSquare\",\n    key: \"unlock-square-\".concat(k),\n    transform: \"rotate(\".concat(l.dist * (360 / data.displayed.length), \") translate(0, \").concat(-(width / 2) + 145 - 14 * l.arcRank, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(l.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  })))), React.createElement(\"image\", {\n    className: \"unlockIcon \".concat(setFade(d), \" \").concat(setUnlockFade(u.ref.id)),\n    height: 13,\n    onClick: () => displayUnlockModal(u.ref, data),\n    onMouseLeave: () => updateUnlockFade(),\n    onMouseOver: () => updateUnlockFade(u.ref.id),\n    transform: (() => u.pos > data.displayed.length / 2 ? \"translate(6, \".concat(-(width / 2) + (142 - 14 * u.rank), \") rotate(90)\") : \"translate(-6, \".concat(-(width / 2) + (153 - 14 * u.rank), \") rotate(270)\"))(),\n    width: 13,\n    xlinkHref: (() => setImageLink(u.ref, game, empire))(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"reqArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" reqGroup \").concat(notFaded.length > 0 ? 'fade' : ''),\n    key: \"req-arcs-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"spokeArc\",\n    d: arc(d),\n    fill: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"spokePin\",\n    x1: 0,\n    y1: -(arcBase + 7 + arcSpace * d.arcRank),\n    x2: 0,\n    y2: -(arcBase - 5 + arcSpace * d.arcRank),\n    strokeWidth: arcWidth,\n    stroke: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }), d.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"reqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n\n      if (d.id === 'TECH_FISHING') {}\n\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }))), d.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * o.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  })))))), React.createElement(\"image\", {\n    x: -75,\n    y: -75,\n    width: 150,\n    height: 150,\n    xlinkHref: \"\".concat(game, \"/\").concat(game, \"-center.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  })))), React.createElement(RequirementsModal, {\n    close: () => setDisplayModal(false),\n    display: displayModal,\n    imagePath: modalInfo.imagePath,\n    leadsRequirements: modalInfo.leadsRequirements,\n    leadsOptionals: modalInfo.leadsOptionals,\n    optionals: modalInfo.optionals,\n    requirements: modalInfo.requirements,\n    title: modalInfo.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }));\n}\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js"],"names":["React","useState","getLeadsTo","getTechById","getTechPrereqs","scaleOrdinal","d3_scaleOrdinal","arc","d3_arc","schemeCategory10","d3_schemeCategory10","RequirementsModal","startSlice","setImageLink","reference","game","empire","link","cat","id","CIVILIZATION_ALL","oxfordizer","words","conjunction","sentence","length","i","Wheel","props","angleShift","arcBase","arcSpace","arcWidth","data","width","height","margin","notFaded","setNotFaded","tempArcs","setTempArcs","notUnlockFaded","setNotUnlockFaded","displayModal","setDisplayModal","modalInfo","setModalInfo","color","innerRadius","d","arcRank","outerRadius","startAngle","arcBack","endAngle","arcDist","unlockArc","rank","arcEnd","updateDataFade","minRank","updateNotFaded","updateTempArcs","map","n","tempDist","tempBack","pos","Math","PI","displayed","lopt","forEach","o","push","lreq","r","spokeRank","unlocks","concat","l","setFade","notFadedIds","indexOf","updateUnlockFade","u","setUnlockFade","displayUnlockModal","console","log","requirements","requires","requirementId","name","prepModalInfo","imagePath","title","optional","optionals","optionalId","leadsRequirements","leadsReq","leadsOptionals","leadsOpt","left","right","top","bottom","t","filter","j","ang","dist","ref","k"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {\n  getLeadsTo,\n  getTechById,\n  getTechPrereqs\n} from '../libs/dataTools.js';\n\nimport {scaleOrdinal as d3_scaleOrdinal} from 'd3-scale';\nimport {arc as d3_arc} from 'd3-shape';\nimport {schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\n\nimport RequirementsModal from './RequirementsModal.js';\n\nimport startSlice from '../img/startSlice.png';\n\nconst setImageLink = function(reference, game, empire) {\n  let link = '';\n\n  if ((reference.cat === 'units' || reference.cat === 'buildings') && !(game === 'civ1' || game === 'civ2')) {\n    if (reference[empire]) {\n      link = `${game}/${reference.cat}/${reference[empire].id}.png`;\n    } else {\n      link = `${game}/${reference.cat}/${reference.CIVILIZATION_ALL.id}.png`;\n    }\n  } else {\n    link = `${game}/${reference.cat}/${reference.id}.png`;\n  }\n\n  return link;\n}\n\nconst oxfordizer = function(words, conjunction) {\n  let sentence = '';\n\n  if (words.length === 1) {\n    sentence = words[0];\n  } else if (words.length === 2) {\n    sentence = `${words[0]} ${conjunction} ${words[1]}`;\n  } else if (words.length >= 3) {\n    sentence = words[0];\n    for (let i = 1; i < words.length - 1; i++) {\n      sentence = `${sentence}, ${words[i]}`;\n    }\n    sentence = `${sentence}, ${conjunction} ${words[words.length - 1]}`;\n  }\n\n  return sentence;\n}\n\nfunction Wheel(props) {\n  const {\n    angleShift,\n    arcBase,\n    arcSpace,\n    arcWidth,\n    data,\n    empire,\n    game,\n    width,\n    height,\n    margin,\n  } = props;\n\n  const [notFaded, setNotFaded] = useState([]);\n  const [tempArcs, setTempArcs] = useState([]);\n  const [notUnlockFaded, setNotUnlockFaded] = useState(null);\n  const [displayModal, setDisplayModal] = React.useState(false);\n  const [modalInfo, setModalInfo] = React.useState({});\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n\n  const arc = d3_arc()\n    .innerRadius((d) => arcBase + (arcSpace * d.arcRank))\n    .outerRadius((d) => (arcBase + arcWidth) + (arcSpace * d.arcRank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcDist);\n\n  const unlockArc = d3_arc()\n    .innerRadius((d) => arcBase + 342.5 + (14 * d.rank))\n    .outerRadius((d) => (arcBase + 342.6 + arcWidth) + (14 * d.rank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcEnd);\n\n  const updateDataFade = (d) => {\n    let minRank = 50;\n    let updateNotFaded = getTechPrereqs(d, data);\n\n    let updateTempArcs = updateNotFaded.map((n) => {\n      let tempDist;\n      let tempBack;\n      if (d.pos > n.pos) {\n        tempDist = (d.pos - n.pos) * ((2 * Math.PI) / data.displayed.length);\n        tempBack = 0;\n      } else if (d.pos < n.pos) {\n        tempDist = 0;\n        tempBack = (d.pos - n.pos) * ((2 * Math.PI) / data.displayed.length);\n      } else if (d.pos === n.pos) {\n        tempDist = n.arcDist;\n        tempBack = n.arcBack;\n      }\n\n      let lopt = [];\n      if (n.id === d.id) {\n        lopt = d.lopt;\n      } else {\n        n.lopt.forEach((o) => {\n          if (o.id === d.id) {\n            lopt.push(o);\n          }\n        });\n      }\n\n      let lreq = [];\n      if (n.id === d.id) {\n        lreq = d.lreq;\n      } else {\n        n.lreq.forEach((r) => {\n          if (r.id === d.id) {\n            lreq.push(r);\n          }\n        });\n      }\n\n      let spokeRank = 50;\n\n      if (d.pos === n.pos) {\n        spokeRank = minRank;\n      } else {\n        lopt.forEach((o) => {\n          if (o.arcRank < spokeRank) {\n            spokeRank = o.arcRank;\n          }\n        });\n        lreq.forEach((r) => {\n          if (r.arcRank < spokeRank) {\n            spokeRank = r.arcRank;\n          }\n        });\n      }\n      if (spokeRank < minRank) {\n        minRank = spokeRank;\n      }\n\n      return {\n        arcBack: tempBack,\n        arcDist: tempDist,\n        arcRank: n.arcRank,\n        id: n.id,\n        lopt: lopt,\n        lreq: lreq,\n        pos: n.pos,\n        spokeRank: spokeRank,\n        unlocks: n.unlocks,\n      };\n    });\n    updateNotFaded = updateNotFaded.concat(d);\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed));\n\n    updateTempArcs.push(d);\n    getLeadsTo(d, data.displayed).forEach((l) => {\n      updateTempArcs.push({\n        arcBack: 0,\n        arcDist: 0,\n        arcRank: 0,\n        id: l.id,\n        lopt: [],\n        lreq: [],\n        pos: l.pos,\n        spokeRank: d.arcRank,\n        unlocks: l.unlocks,\n      });\n    });\n\n    setNotFaded(updateNotFaded);\n    setTempArcs(updateTempArcs);\n  };\n\n  const setFade = (d) => {\n    if (notFaded.length > 0) {\n      const notFadedIds = notFaded.map((n) => n.id);\n\n      if (notFadedIds.indexOf(d.id) < 0) {\n        return 'fade';\n      }\n    }\n\n    return '';\n  }\n\n  const updateUnlockFade = (u) => {\n    if (u) {\n      setNotUnlockFaded(u);\n    } else {\n      setNotUnlockFaded(null);\n    }\n  }\n\n  const setUnlockFade = (u) => {\n    if (notUnlockFaded) {\n      return (u === notUnlockFaded) ? '' : 'fade';\n    }\n  }\n\n  function displayUnlockModal(reference, data) {\n    console.log(data);\n\n    let requirements = [];\n    reference.requires.forEach((requirementId) => {\n      requirements.push(getTechById(requirementId, data).name);\n    });\n\n    console.log(requirements);\n    console.log(reference);\n\n    let prepModalInfo = {\n      imagePath: setImageLink(reference, game, empire),\n      requirements: oxfordizer(requirements, 'and'),\n      title: (reference.name) ? reference.name: reference[empire].name,\n    };\n\n    if (reference.optional) {\n      let optionals = [];\n      reference.optional.forEach((optionalId) => {\n        optionals.push(getTechById(optionalId, data).name);\n      });\n      prepModalInfo.optionals = oxfordizer(optionals, 'or');\n    }\n\n    if (reference.lreq) {\n      let leadsRequirements = [];\n      reference.lreq.forEach((leadsReq) => {\n        leadsRequirements.push(getTechById(leadsReq.id, data).name);\n      });\n      prepModalInfo.leadsRequirements = oxfordizer(leadsRequirements, 'and');\n    }\n\n    if (reference.lopt) {\n      let leadsOptionals = [];\n      reference.lopt.forEach((leadsOpt) => {\n        leadsOptionals.push(getTechById(leadsReq.id, data).name);\n      });\n      prepModalInfo.leadsOptionals = oxfordizer(leadsOptionals, 'and');\n    }\n\n    setModalInfo(prepModalInfo);\n\n    setDisplayModal(true);\n    console.log(modalInfo);\n  }\n\n  return (\n    <div>\n      <svg\n        width={width + margin.left + margin.right}\n        height={height + margin.top + margin.bottom}\n      >\n        <g\n          className='civTechs'\n          transform={`translate(${margin.left}, ${margin.top})`}\n        >\n          <g\n            className='wheel'\n            transform={`translate(${width / 2}, ${height / 2})`}\n          >\n            <image\n              id='startSlice'\n              x={0}\n              y={-(height/2)}\n              width={167}\n              height={height/2}\n              xlinkHref={startSlice}\n            />\n            {(notFaded.length > 0 && tempArcs.length > 0) &&\n              <g className='tempArcs'>\n                {tempArcs.map((t, i) => (\n                  <g\n                    className='temp-spokes'\n                    key={`temp-spokes-${i}`}\n                    transform={`rotate(${t.pos * (360 / data.displayed.length) + angleShift})`}\n                  >\n                    <line\n                      className='spokeLine'\n                      x1={0}\n                      y1={-(arcBase + (arcSpace * t.spokeRank))}\n                      x2={0}\n                      y2={-(width / 2) + 160 - (t.unlocks.length * 14)}\n                    />\n                  </g>\n                ))}\n                {tempArcs.filter((t) => t.lopt.length > 0 || t.lreq.length > 0).map((t, i) => (\n                  <g\n                    className='tempGroup'\n                    key={`temp-arcs-${i}`}\n                    transform={`rotate(${t.pos * (360 / data.displayed.length) + angleShift})`}\n                  >\n                    <path\n                      className='tempArc'\n                      d={arc(t)}\n                      fill={color(t.pos)}\n                    />\n                    <line\n                      className='tempSpokePin'\n                      x1={0}\n                      y1={-(arcBase + 7 + (arcSpace * t.arcRank))}\n                      x2={0}\n                      y2={-(arcBase - 5 + (arcSpace * t.arcRank))}\n                      strokeWidth={arcWidth}\n                      stroke={color(t.pos)}\n                    />\n                   {t.lreq.map((r, j) => (\n                      <g\n                        className='tempReqSquare'\n                        key={`req-square-${j}`}\n                        transform={(() => {\n                          const ang = r.dist * (360 / data.displayed.length);\n                          return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * r.arcRank))})`;\n                        })()}\n                      >\n                        <rect\n                          x={-2.5}\n                          y={-0.75}\n                          width={5}\n                          height={5}\n                          fill={color(r.pos)}\n                        />\n                      </g>\n                    ))}\n                    {t.lopt.map((o, j) => (\n                      <g\n                        className='optCircle'\n                        key={`opt-circle-${j}`}\n                        transform={(() => {\n                          const ang = o.dist * (360 / data.displayed.length);\n                          return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * o.arcRank))})`;\n                        })()}\n                      >\n                        <circle\n                          cx={0}\n                          cy={2}\n                          r={2.5}\n                          strokeWidth={1}\n                          stroke={color(o.pos)}\n                          fill='white'\n                        />\n                      </g>\n                    ))}\n                  </g>\n                ))}\n              </g>\n            }\n\n            <g className='spokeAll'>\n              {\n                data.displayed.map((d, i) => (\n                  <g\n                    className={`${d.id} spoke`}\n                    key={`spoke-${i}`}\n                    transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                  >\n                    <line\n                      className={`spokeLine ${(notFaded.length > 0) ? 'fade' : ''}`}\n                      x1={0}\n                      y1={(!d.requires && !d.optional) ? 0 : -(arcBase + (arcSpace * d.spokeRank))}\n                      x2={0}\n                      y2={-(width / 2) + 160 - (d.unlocks.length * 14)}\n                    />\n                    <image\n                      className={`techImg ${setFade(d)}`}\n                      height={25}\n                      onClick={() => displayUnlockModal(d, data)}\n                      onMouseLeave={() => setNotFaded([])}\n                      onMouseOver={() => updateDataFade(d)}\n                      transform={(() => (d.pos > (data.displayed.length / 2)) ?\n                        `translate(10, ${(-(width / 2) + 157)}) rotate(90)` :\n                        `translate(-10, ${(-(width / 2) + 182)}) rotate(270)`)()}\n                      width={25}\n                      xlinkHref={`/${game}/${d.cat}/${d.id}.png`}\n                    />\n                    {d.unlocks.map((u, j) => (\n                      <g key={`unlock-${j}`}>\n                        {u.lreq &&\n                          <g className={`unlock ${(notUnlockFaded === u.ref.id) ? '' : 'opaque'} ${u.ref.id}${u.pos}`}>\n                            <path\n                              className='unlockArc'\n                              rank={u.rank}\n                              fill={color(u.pos)}\n                              d={unlockArc(u)}\n                            />\n                            {u.lreq.map((l, k) => (\n                              <g\n                                className='unlockSquare'\n                                key={`unlock-square-${k}`}\n                                transform={`rotate(${l.dist * (360 / data.displayed.length)}) translate(0, ${(-(width/2) + 145 - (14 * l.arcRank))})`}\n                              >\n                                <rect\n                                  x={-2.5}\n                                  y={-0.75}\n                                  width={5}\n                                  height={5}\n                                  fill={color(l.pos)}\n                                />\n                              </g>\n                            ))}\n                          </g>\n                        }\n                        <image\n                          className={`unlockIcon ${setFade(d)} ${setUnlockFade(u.ref.id)}`}\n                          height={13}\n                          onClick={() => displayUnlockModal(u.ref, data)}\n                          onMouseLeave={() => updateUnlockFade()}\n                          onMouseOver={() => updateUnlockFade(u.ref.id)}\n                          transform={(() => (u.pos > (data.displayed.length / 2)) ?\n                            `translate(6, ${(-(width / 2) + (142 - (14 * u.rank)))}) rotate(90)` :\n                            `translate(-6, ${(-(width / 2) + (153 - (14 * u.rank)))}) rotate(270)`)()}\n                          width={13}\n                          xlinkHref={(() => setImageLink(u.ref, game, empire))()}\n                        />\n                      </g>\n                    ))}\n                  </g>\n                ))\n              }\n            </g>\n\n            <g className='reqArcs'>\n              {data.displayed.map((d, i) => (\n                <g\n                  className={`${d.id} reqGroup ${(notFaded.length > 0) ? 'fade' : ''}`}\n                  key={`req-arcs-${i}`}\n                  transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                >\n                  <path\n                    className='spokeArc'\n                    d={arc(d)}\n                    fill={color(d.pos)}\n                  />\n                  <line\n                    className='spokePin'\n                    x1={0}\n                    y1={-(arcBase + 7 + (arcSpace * d.arcRank))}\n                    x2={0}\n                    y2={-(arcBase - 5 + (arcSpace * d.arcRank))}\n                    strokeWidth={arcWidth}\n                    stroke={color(d.pos)}\n                  />\n                  {d.lreq.map((r, j) => (\n                    <g\n                      className='reqSquare'\n                      key={`req-square-${j}`}\n                      transform={(() => {\n\n                        const ang = r.dist * (360 / data.displayed.length);\n                        if (d.id === 'TECH_FISHING') {\n                        }\n                        return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * r.arcRank))})`;\n                      })()}\n                    >\n                      <rect\n                        x={-2.5}\n                        y={-0.75}\n                        width={5}\n                        height={5}\n                        fill={color(r.pos)}\n                      />\n                    </g>\n                  ))}\n                  {d.lopt.map((o, j) => (\n                    <g\n                      className='optCircle'\n                      key={`opt-circle-${j}`}\n                      transform={(() => {\n                        const ang = o.dist * (360 / data.displayed.length);\n                        return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * o.arcRank))})`;\n                      })()}\n                    >\n                      <circle\n                        cx={0}\n                        cy={2}\n                        r={2.5}\n                        strokeWidth={1}\n                        stroke={color(o.pos)}\n                        fill='white'\n                      />\n                    </g>\n                  ))}\n                </g>\n              ))}\n            </g>\n\n            <image\n              x={-75}\n              y={-75}\n              width={150}\n              height={150}\n              xlinkHref={`${game}/${game}-center.png`}\n            />\n          </g>\n        </g>\n      </svg>\n\n      <RequirementsModal\n        close={() => setDisplayModal(false)}\n        display={displayModal}\n        imagePath={modalInfo.imagePath}\n        leadsRequirements={modalInfo.leadsRequirements}\n        leadsOptionals={modalInfo.leadsOptionals}\n        optionals={modalInfo.optionals}\n        requirements={modalInfo.requirements}\n        title={modalInfo.title}\n      />\n    </div>\n  );\n}\n\nexport default Wheel;\n"]},"metadata":{},"sourceType":"module"}