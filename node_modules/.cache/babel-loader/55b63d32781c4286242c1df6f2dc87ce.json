{"ast":null,"code":"import _slicedToArray from \"/Users/pcclarke/Documents/GitHub/civ-techs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js\";\nimport React, { useState } from 'react';\nimport { find } from 'lodash';\nimport { getLeadsTo, getTechPrereqs } from '../libs/dataTools.js';\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { arc as d3_arc } from 'd3-shape';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport startSlice from '../img/startSlice.png';\n\nfunction Wheel(props) {\n  const angleShift = props.angleShift,\n        arcBase = props.arcBase,\n        arcSpace = props.arcSpace,\n        arcWidth = props.arcWidth,\n        data = props.data,\n        empire = props.empire,\n        game = props.game,\n        width = props.width,\n        height = props.height,\n        margin = props.margin;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFaded = _useState2[0],\n        setNotFaded = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tempArcs = _useState4[0],\n        setTempArcs = _useState4[1];\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n  const arc = d3_arc().innerRadius(d => arcBase + arcSpace * d.arcRank).outerRadius(d => arcBase + arcWidth + arcSpace * d.arcRank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcDist);\n  const unlockArc = d3_arc().innerRadius(d => arcBase + 342.5 + 14 * d.rank).outerRadius(d => arcBase + 342.6 + arcWidth + 14 * d.rank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcEnd);\n\n  const updateDataFade = d => {\n    let updateNotFaded = [d];\n    updateNotFaded = updateNotFaded.concat(getTechPrereqs(d, data));\n    let minRank = 50;\n    updateNotFaded.forEach(u => {\n      if (u.spokeRank < minRank) {\n        minRank = u.spokeRank;\n      }\n    });\n    const updateTempArcs = updateNotFaded.map(n => {\n      let tempDist;\n      let tempBack;\n\n      if (d.pos > n.pos) {\n        tempDist = (d.pos - n.pos) * (2 * Math.PI / data.displayed.length);\n        tempBack = 0;\n      } else if (d.pos < n.pos) {\n        tempDist = 0;\n        tempBack = (d.pos - n.pos) * (2 * Math.PI / data.displayed.length);\n      } else if (d.pos === n.pos) {\n        tempDist = n.arcDist;\n        tempBack = n.arcBack;\n      }\n\n      let lopt = [];\n\n      if (n.id === d.id) {\n        lopt = d.lopt;\n      } else {\n        n.lopt.forEach(o => {\n          if (o.id === d.id) {\n            lopt.push(o);\n          }\n        });\n      }\n\n      let lreq = [];\n\n      if (n.id === d.id) {\n        lreq = d.lreq;\n      } else {\n        n.lreq.forEach(r => {\n          if (r.id === d.id) {\n            lreq.push(r);\n          }\n        });\n      }\n\n      let spokeRank = 50;\n\n      if (d.pos === n.pos) {\n        spokeRank = minRank;\n      } else {\n        lopt.forEach(o => {\n          if (o.arcRank < spokeRank) {\n            spokeRank = o.arcRank;\n          }\n        });\n        lreq.forEach(r => {\n          if (r.arcRank < spokeRank) {\n            spokeRank = r.arcRank;\n          }\n        });\n      }\n\n      return {\n        arcBack: tempBack,\n        arcDist: tempDist,\n        arcRank: n.arcRank,\n        id: n.id,\n        lopt: lopt,\n        lreq: lreq,\n        pos: n.pos,\n        spokeRank: spokeRank,\n        unlocks: n.unlocks\n      };\n    });\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed));\n    console.log(data);\n    console.log(updateTempArcs);\n    setNotFaded(updateNotFaded);\n    setTempArcs(updateTempArcs);\n  };\n\n  const setFade = d => {\n    if (notFaded.length > 0) {\n      const notFadedIds = notFaded.map(n => n.id);\n\n      if (notFadedIds.indexOf(d.id) < 0) {\n        return 'fade';\n      }\n    }\n\n    return '';\n  };\n\n  return React.createElement(\"svg\", {\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"civTechs\",\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"wheel\",\n    transform: \"translate(\".concat(width / 2, \", \").concat(height / 2, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"image\", {\n    id: \"startSlice\",\n    x: 0,\n    y: -(height / 2),\n    width: 167,\n    height: height / 2,\n    xlinkHref: startSlice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), notFaded.length > 0 && tempArcs.length > 0 && React.createElement(\"g\", {\n    className: \"tempArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, tempArcs.map((t, i) => React.createElement(\"g\", {\n    className: \"tempGroup\",\n    key: \"temp-arcs-\".concat(i),\n    transform: \"rotate(\".concat(t.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine\",\n    x1: 0,\n    y1: -(arcBase + arcSpace * t.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - t.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    className: \"tempArc\",\n    d: arc(t),\n    fill: color(t.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"tempSpokePin\",\n    x1: 0,\n    y1: -(arcBase + 7 + arcSpace * t.arcRank),\n    x2: 0,\n    y2: -(arcBase - 5 + arcSpace * t.arcRank),\n    strokeWidth: arcWidth,\n    stroke: color(t.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), t.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"tempReqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n      console.log(ang);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }))), t.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * o.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"spokeAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" spoke\"),\n    key: \"spoke-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine \".concat(notFaded.length > 0 ? 'fade' : ''),\n    x1: 0,\n    y1: !d.requires && !d.optional ? 0 : -(arcBase + arcSpace * d.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - d.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(\"image\", {\n    className: \"techImg \".concat(setFade(d)),\n    height: 25,\n    onMouseLeave: () => setNotFaded([]),\n    onMouseOver: () => updateDataFade(d),\n    transform: (() => d.pos > data.displayed.length / 2 ? \"translate(10, \".concat(-(width / 2) + 157, \") rotate(90)\") : \"translate(-10, \".concat(-(width / 2) + 182, \") rotate(270)\"))(),\n    width: 25,\n    xlinkHref: \"/\".concat(game, \"/\").concat(d.cat, \"/\").concat(d.id, \".png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }), d.unlocks.map((u, j) => React.createElement(\"g\", {\n    key: \"unlock-\".concat(j),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, u.lreq && React.createElement(\"g\", {\n    className: \"unlock opaque \".concat(u.ref.id).concat(u.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"unlockArc\",\n    rank: u.rank,\n    fill: color(u.pos),\n    d: unlockArc(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), u.lreq.map((l, k) => React.createElement(\"g\", {\n    className: \"unlockSquare\",\n    key: \"unlock-square-\".concat(k),\n    transform: \"rotate(\".concat(l.dist * (360 / data.displayed.length), \") translate(0, \").concat(-(width / 2) + 145 - 14 * l.arcRank, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(l.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })))), React.createElement(\"image\", {\n    className: \"unlockIcon \".concat(setFade(d)),\n    height: 13,\n    transform: (() => u.pos > data.displayed.length / 2 ? \"translate(6, \".concat(-(width / 2) + (142 - 14 * u.rank), \") rotate(90)\") : \"translate(-6, \".concat(-(width / 2) + (153 - 14 * u.rank), \") rotate(270)\"))(),\n    width: 13,\n    xlinkHref: (() => {\n      let link;\n\n      if ((u.ref.cat === 'units' || u.ref.cat === 'buildings') && !(game === 'civ1' || game === 'civ2')) {\n        if (u.ref[empire]) {\n          link = \"\".concat(game, \"/\").concat(u.ref.cat, \"/\").concat(u.ref[empire].id, \".png\");\n        } else {\n          link = \"\".concat(game, \"/\").concat(u.ref.cat, \"/\").concat(u.ref.CIVILIZATION_ALL.id, \".png\");\n        }\n      } else {\n        link = \"\".concat(game, \"/\").concat(u.ref.cat, \"/\").concat(u.ref.id, \".png\");\n      }\n\n      return link;\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"reqArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" reqGroup \").concat(notFaded.length > 0 ? 'fade' : ''),\n    key: \"req-arcs-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"spokeArc\",\n    d: arc(d),\n    fill: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"spokePin\",\n    x1: 0,\n    y1: -(arcBase + 7 + arcSpace * d.arcRank),\n    x2: 0,\n    y2: -(arcBase - 5 + arcSpace * d.arcRank),\n    strokeWidth: arcWidth,\n    stroke: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }), d.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"reqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n\n      if (d.id === 'TECH_FISHING') {\n        console.log(ang);\n      }\n\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }))), d.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * o.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  })))))), React.createElement(\"image\", {\n    x: -75,\n    y: -75,\n    width: 150,\n    height: 150,\n    xlinkHref: \"\".concat(game, \"/\").concat(game, \"-center.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }))));\n}\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js"],"names":["React","useState","find","getLeadsTo","getTechPrereqs","scaleOrdinal","d3_scaleOrdinal","arc","d3_arc","schemeCategory10","d3_schemeCategory10","startSlice","Wheel","props","angleShift","arcBase","arcSpace","arcWidth","data","empire","game","width","height","margin","notFaded","setNotFaded","tempArcs","setTempArcs","color","innerRadius","d","arcRank","outerRadius","startAngle","arcBack","endAngle","arcDist","unlockArc","rank","arcEnd","updateDataFade","updateNotFaded","concat","minRank","forEach","u","spokeRank","updateTempArcs","map","n","tempDist","tempBack","pos","Math","PI","displayed","length","lopt","id","o","push","lreq","r","unlocks","console","log","setFade","notFadedIds","indexOf","left","right","top","bottom","t","i","j","ang","dist","requires","optional","cat","ref","l","k","link","CIVILIZATION_ALL"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {find} from 'lodash';\n\nimport {getLeadsTo, getTechPrereqs} from '../libs/dataTools.js';\n\nimport {scaleOrdinal as d3_scaleOrdinal} from 'd3-scale';\nimport {arc as d3_arc} from 'd3-shape';\nimport {schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\n\nimport startSlice from '../img/startSlice.png';\n\nfunction Wheel(props) {\n  const {\n    angleShift,\n    arcBase,\n    arcSpace,\n    arcWidth,\n    data,\n    empire,\n    game,\n    width,\n    height,\n    margin,\n  } = props;\n\n  const [notFaded, setNotFaded] = useState([]);\n  const [tempArcs, setTempArcs] = useState([]);\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n\n  const arc = d3_arc()\n    .innerRadius((d) => arcBase + (arcSpace * d.arcRank))\n    .outerRadius((d) => (arcBase + arcWidth) + (arcSpace * d.arcRank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcDist);\n\n  const unlockArc = d3_arc()\n    .innerRadius((d) => arcBase + 342.5 + (14 * d.rank))\n    .outerRadius((d) => (arcBase + 342.6 + arcWidth) + (14 * d.rank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcEnd);\n\n  const updateDataFade = (d) => {\n    let updateNotFaded = [d];\n\n    updateNotFaded = updateNotFaded.concat(getTechPrereqs(d, data));\n    let minRank = 50;\n    updateNotFaded.forEach((u) => {\n      if (u.spokeRank < minRank) {\n        minRank = u.spokeRank;\n      }\n    });\n\n    const updateTempArcs = updateNotFaded.map((n) => {\n      let tempDist;\n      let tempBack;\n      if (d.pos > n.pos) {\n        tempDist = (d.pos - n.pos) * ((2 * Math.PI) / data.displayed.length);\n        tempBack = 0;\n      } else if (d.pos < n.pos) {\n        tempDist = 0;\n        tempBack = (d.pos - n.pos) * ((2 * Math.PI) / data.displayed.length);\n      } else if (d.pos === n.pos) {\n        tempDist = n.arcDist;\n        tempBack = n.arcBack;\n      }\n\n      let lopt = [];\n      if (n.id === d.id) {\n        lopt = d.lopt;\n      } else {\n        n.lopt.forEach((o) => {\n          if (o.id === d.id) {\n            lopt.push(o);\n          }\n        });\n      }\n\n      let lreq = [];\n      if (n.id === d.id) {\n        lreq = d.lreq;\n      } else {\n        n.lreq.forEach((r) => {\n          if (r.id === d.id) {\n            lreq.push(r);\n          }\n        });\n      }\n\n      let spokeRank = 50;\n\n      if (d.pos === n.pos) {\n        spokeRank = minRank;\n      } else {\n        lopt.forEach((o) => {\n          if (o.arcRank < spokeRank) {\n            spokeRank = o.arcRank;\n          }\n        });\n        lreq.forEach((r) => {\n          if (r.arcRank < spokeRank) {\n            spokeRank = r.arcRank;\n          }\n        });\n      }\n\n      return {\n        arcBack: tempBack,\n        arcDist: tempDist,\n        arcRank: n.arcRank,\n        id: n.id,\n        lopt: lopt,\n        lreq: lreq,\n        pos: n.pos,\n        spokeRank: spokeRank,\n        unlocks: n.unlocks,\n      };\n    });\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed));\n\n    console.log(data);\n    console.log(updateTempArcs);\n\n    setNotFaded(updateNotFaded);\n    setTempArcs(updateTempArcs);\n\n  };\n\n  const setFade = (d) => {\n    if (notFaded.length > 0) {\n      const notFadedIds = notFaded.map((n) => n.id);\n\n      if (notFadedIds.indexOf(d.id) < 0) {\n        return 'fade';\n      }\n    }\n\n    return '';\n  }\n\n  return (\n    <svg\n      width={width + margin.left + margin.right}\n      height={height + margin.top + margin.bottom}\n    >\n      <g\n        className='civTechs'\n        transform={`translate(${margin.left}, ${margin.top})`}\n      >\n        <g\n          className='wheel'\n          transform={`translate(${width / 2}, ${height / 2})`}\n        >\n          <image\n            id='startSlice'\n            x={0}\n            y={-(height/2)}\n            width={167}\n            height={height/2}\n            xlinkHref={startSlice}\n          />\n          {(notFaded.length > 0 && tempArcs.length > 0) &&\n            <g className='tempArcs'>\n              {tempArcs.map((t, i) => (\n                <g\n                  className='tempGroup'\n                  key={`temp-arcs-${i}`}\n                  transform={`rotate(${t.pos * (360 / data.displayed.length) + angleShift})`}\n                >\n                  <line\n                    className='spokeLine'\n                    x1={0}\n                    y1={-(arcBase + (arcSpace * t.spokeRank))}\n                    x2={0}\n                    y2={-(width / 2) + 160 - (t.unlocks.length * 14)}\n                  />\n                  <path\n                    className='tempArc'\n                    d={arc(t)}\n                    fill={color(t.pos)}\n                  />\n                  <line\n                    className='tempSpokePin'\n                    x1={0}\n                    y1={-(arcBase + 7 + (arcSpace * t.arcRank))}\n                    x2={0}\n                    y2={-(arcBase - 5 + (arcSpace * t.arcRank))}\n                    strokeWidth={arcWidth}\n                    stroke={color(t.pos)}\n                  />\n                 {t.lreq.map((r, j) => (\n                    <g\n                      className='tempReqSquare'\n                      key={`req-square-${j}`}\n                      transform={(() => {\n                        const ang = r.dist * (360 / data.displayed.length);\n                        console.log(ang);\n                        return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * r.arcRank))})`;\n                      })()}\n                    >\n                      <rect\n                        x={-2.5}\n                        y={-0.75}\n                        width={5}\n                        height={5}\n                        fill={color(r.pos)}\n                      />\n                    </g>\n                  ))}\n                  {t.lopt.map((o, j) => (\n                    <g\n                      className='optCircle'\n                      key={`opt-circle-${j}`}\n                      transform={(() => {\n                        const ang = o.dist * (360 / data.displayed.length);\n                        return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * o.arcRank))})`;\n                      })()}\n                    >\n                      <circle\n                        cx={0}\n                        cy={2}\n                        r={2.5}\n                        strokeWidth={1}\n                        stroke={color(o.pos)}\n                        fill='white'\n                      />\n                    </g>\n                  ))}\n                </g>\n              ))}\n            </g>\n          }\n\n          <g className='spokeAll'>\n            {\n              data.displayed.map((d, i) => (\n                <g\n                  className={`${d.id} spoke`}\n                  key={`spoke-${i}`}\n                  transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                >\n                  <line\n                    className={`spokeLine ${(notFaded.length > 0) ? 'fade' : ''}`}\n                    x1={0}\n                    y1={(!d.requires && !d.optional) ? 0 : -(arcBase + (arcSpace * d.spokeRank))}\n                    x2={0}\n                    y2={-(width / 2) + 160 - (d.unlocks.length * 14)}\n                  />\n                  <image\n                    className={`techImg ${setFade(d)}`}\n                    height={25}\n                    onMouseLeave={() => setNotFaded([])}\n                    onMouseOver={() => updateDataFade(d)}\n                    transform={(() => (d.pos > (data.displayed.length / 2)) ?\n                      `translate(10, ${(-(width / 2) + 157)}) rotate(90)` :\n                      `translate(-10, ${(-(width / 2) + 182)}) rotate(270)`)()}\n                    width={25}\n                    xlinkHref={`/${game}/${d.cat}/${d.id}.png`}\n                  />\n                  {d.unlocks.map((u, j) => (\n                    <g key={`unlock-${j}`}>\n                      {u.lreq &&\n                        <g className={`unlock opaque ${u.ref.id}${u.pos}`}>\n                          <path\n                            className='unlockArc'\n                            rank={u.rank}\n                            fill={color(u.pos)}\n                            d={unlockArc(u)}\n                          />\n                          {u.lreq.map((l, k) => (\n                            <g\n                              className='unlockSquare'\n                              key={`unlock-square-${k}`}\n                              transform={`rotate(${l.dist * (360 / data.displayed.length)}) translate(0, ${(-(width/2) + 145 - (14 * l.arcRank))})`}\n                            >\n                              <rect\n                                x={-2.5}\n                                y={-0.75}\n                                width={5}\n                                height={5}\n                                fill={color(l.pos)}\n                              />\n                            </g>\n                          ))}\n                        </g>\n                      }\n                      <image\n                        className={`unlockIcon ${setFade(d)}`}\n                        height={13}\n                        transform={(() => (u.pos > (data.displayed.length / 2)) ?\n                          `translate(6, ${(-(width / 2) + (142 - (14 * u.rank)))}) rotate(90)` :\n                          `translate(-6, ${(-(width / 2) + (153 - (14 * u.rank)))}) rotate(270)`)()}\n                        width={13}\n                        xlinkHref={(() => {\n                          let link;\n                          if ((u.ref.cat === 'units' || u.ref.cat === 'buildings') &&\n                              !(game === 'civ1' || game === 'civ2')) {\n                              if (u.ref[empire]) {\n                                  link = `${game}/${u.ref.cat}/${u.ref[empire].id}.png`;\n                              } else {\n                                  link = `${game}/${u.ref.cat}/${u.ref.CIVILIZATION_ALL.id}.png`;\n                              }\n                          } else {\n                              link = `${game}/${u.ref.cat}/${u.ref.id}.png`;\n                          }\n\n                          return link;\n                        })()}\n                      />\n                    </g>\n                  ))}\n                </g>\n              ))\n            }\n          </g>\n\n          <g className='reqArcs'>\n            {data.displayed.map((d, i) => (\n              <g\n                className={`${d.id} reqGroup ${(notFaded.length > 0) ? 'fade' : ''}`}\n                key={`req-arcs-${i}`}\n                transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n              >\n                <path\n                  className='spokeArc'\n                  d={arc(d)}\n                  fill={color(d.pos)}\n                />\n                <line\n                  className='spokePin'\n                  x1={0}\n                  y1={-(arcBase + 7 + (arcSpace * d.arcRank))}\n                  x2={0}\n                  y2={-(arcBase - 5 + (arcSpace * d.arcRank))}\n                  strokeWidth={arcWidth}\n                  stroke={color(d.pos)}\n                />\n                {d.lreq.map((r, j) => (\n                  <g\n                    className='reqSquare'\n                    key={`req-square-${j}`}\n                    transform={(() => {\n\n                      const ang = r.dist * (360 / data.displayed.length);\n                      if (d.id === 'TECH_FISHING') {\n                        console.log(ang);\n                      }\n                      return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * r.arcRank))})`;\n                    })()}\n                  >\n                    <rect\n                      x={-2.5}\n                      y={-0.75}\n                      width={5}\n                      height={5}\n                      fill={color(r.pos)}\n                    />\n                  </g>\n                ))}\n                {d.lopt.map((o, j) => (\n                  <g\n                    className='optCircle'\n                    key={`opt-circle-${j}`}\n                    transform={(() => {\n                      const ang = o.dist * (360 / data.displayed.length);\n                      return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * o.arcRank))})`;\n                    })()}\n                  >\n                    <circle\n                      cx={0}\n                      cy={2}\n                      r={2.5}\n                      strokeWidth={1}\n                      stroke={color(o.pos)}\n                      fill='white'\n                    />\n                  </g>\n                ))}\n              </g>\n            ))}\n          </g>\n\n\n\n          <image\n            x={-75}\n            y={-75}\n            width={150}\n            height={150}\n            xlinkHref={`${game}/${game}-center.png`}\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Wheel;\n"]},"metadata":{},"sourceType":"module"}