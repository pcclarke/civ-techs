{"ast":null,"code":"import _slicedToArray from \"/Users/pcclarke/Documents/GitHub/civ-techs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcclarke/Documents/GitHub/civ-techs/src/components/CivTechs.js\";\nimport React, { useState } from 'react';\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport arc from '../img/arc.gif';\nimport arcCircle from '../img/arc_circle.gif';\nimport arcPin from '../img/arc_pin.gif';\nimport arcSquare from '../img/arc_square.gif';\nimport largeIcon from '../img/large_icon.gif';\nimport smallIcon from '../img/small_icon.gif';\nimport spoke from '../img/spoke.gif';\nimport '../css/CivTechs.css';\n\nfunction CivTechs() {\n  let arcSpace = 18;\n  let empire = 'CIVILIZATION_ALL';\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  },\n        width = CIV.width - margin.left - margin.right,\n        height = CIV.width - margin.top - margin.bottom;\n  const defaults = {\n    arcBase: 100,\n    arcSpace: 14,\n    arcWidth: 1.5,\n    color: d3_scaleOrdinal(d3_schemeCategory10),\n    coords: [0, 0],\n    game: 'civ4bts',\n    ilization: 'CIVILIZATION_ALL',\n    dataTypes: ['units', 'buildings', 'religions', 'build', 'resources', 'projects', 'promotions', 'civics'],\n    width: 1200,\n    height: 1200,\n    angleShift: 2\n  };\n\n  const _useState = useState('civ4bts'),\n        _useState2 = _slicedToArray(_useState, 2),\n        game = _useState2[0],\n        setGame = _useState2[1]; // const selectGame = () => {\n  //   // d3.selectAll('.civWheel').remove();\n  //   // d3.select('#tooltip').classed('hidden', true);\n  //   selectedCivilization = 'CIVILIZATION_ALL';\n  //   document.getElementById('selectCiv').value = CIV.ilization;\n  //   var selectCiv = document.getElementById('selectCiv');\n  //   // selectCiv.options.length = 1;\n  //   makeGame(this);\n  // }\n\n\n  const selectGame = event => {\n    setGame(event.target.value);\n\n    if (+game[3] < 4) {\n      arcSpace = 16;\n    } else {\n      arcSpace = 18;\n    } // makeWheel(CIV.game);\n\n  };\n\n  const selectEmpire = event => {\n    empire = event.target.value;\n  };\n\n  function makeWheel(game, civilization) {\n    const path = \"\".concat(game, \"/civdata.json\"); // d3.json(path, function (data) {\n    //     // Functions to process data so wheel can be drawn        \n    //     setupData(data);\n    //     orderDisplayed(data);\n    //     setupArcs(data);\n    //     // Debug processed data\n    //     console.log(data.displayed);\n    //     // Populate select civilizations drop-down\n    //     if ((+(CIV.game[3])) > 2) {\n    //         data.civilizations.forEach(function (c) {\n    //             d3.select(\"#selectCiv\")\n    //                 .append(\"option\")\n    //                 .attr(\"value\", c.id)\n    //                 .text(c.name);\n    //         });\n    //     }\n    //     drawWheel();\n    //     // Draw portions of the wheel\n    //     function drawWheel () {\n    //         var wheel = svg.append(\"g\")\n    //             .attr(\"class\", \"wheel\")\n    //             .attr(\"transform\", \"translate(\" + (width / 2) + \" \" + (height / 2) +\")\");\n    //         wheel.append(\"image\") // pie \"slice\" to indicate start of spokes\n    //             .attr(\"id\", \"startSlice\")\n    //             .attr(\"x\", 0)\n    //             .attr(\"y\", -(height/2))\n    //             .attr(\"width\", 167)\n    //             .attr(\"height\", (height/2))\n    //             .attr(\"xlink:href\", \"img/startSlice.png\");\n    //         var spokeAll = wheel.append(\"g\")\n    //             .attr(\"class\", \"spokeAll\");\n    //         var spokes = spokeAll.selectAll(\".spoke\")\n    //                 .data(data.displayed)\n    //             .enter().append(\"g\")\n    //                 .attr(\"class\", function(d) {\n    //                     var className = d.id + \" spoke\";\n    //                     return className;\n    //                 })\n    //                 .attr(\"transform\", function(d) {\n    //                     var ang = d.pos * (360 / data.displayed.length) + CIV.angleShift;\n    //                     return \"rotate(\" + ang +\")\";\n    //                 })\n    //                 .on(\"click\", function(d) { });\n    //         var spokeLine = spokes.append(\"line\") // Spoke lines from center\n    //             .attr(\"class\", \"spokeLine\")\n    //             .attr(\"x1\", 0)\n    //             .attr(\"y1\", function(d) {\n    //                 if (!d.requires && !d.optional) {\n    //                     return 0;\n    //                 } \n    //                 return -(CIV.arcBase + (CIV.arcSpace * d.spokeRank));\n    //             })\n    //             .attr(\"x2\", 0)\n    //             .attr(\"y2\", function(d) {\n    //                 return -(width / 2) + 160 - (d.unlocks.length * 14);\n    //             });\n    //         var techIcons = spokes.append(\"image\") // Displayed item icons\n    //             .attr(\"class\", \"techImg\")\n    //             .attr(\"transform\", function(d) {\n    //                 if (d.pos > (data.displayed.length / 2)) {\n    //                     return \"translate(10, \" + (-(width / 2) + 157) + \") rotate(90)\";\n    //                 }\n    //                 return \"translate(-10, \" + (-(width / 2) + 182) + \") rotate(270)\";\n    //             })\n    //             .attr(\"height\", 25)\n    //             .attr(\"width\", 25)\n    //             .attr(\"xlink:href\", function(d) {\n    //                 var link;\n    //                 if (d.cat === \"units\" || d.cat === \"buildings\") {\n    //                     if (d[CIV.ilization]) {\n    //                         link = game + \"/img/\" + d.cat + \"/\" + d[CIV.ilization].id + \".png\";\n    //                     } else {\n    //                         link = game + \"/img/\" + d.cat + \"/\" + d.CIVILIZATION_ALL.id + \".png\";    \n    //                     }\n    //                 } else {\n    //                     link = game + \"/img/\" + d.cat + \"/\" + d.id + \".png\";\n    //                 }\n    //                 return link;\n    //             })\n    //             .on(\"mouseover\", function(d) {\n    //                 var tipName = \"\";\n    //                 if (d.cat === \"units\" || d.cat === \"buildings\") {\n    //                     if (d[CIV.ilization]) {\n    //                         tipName = d[CIV.ilization].name;\n    //                     } else {\n    //                         tipName = d.CIVILIZATION_ALL.name;\n    //                     }\n    //                 } else {\n    //                     tipName = d.name;\n    //                 }\n    //                     spokeHighlightIn(d, data);\n    //             })\n    //             .on(\"mouseout\", function(d) {\n    //                 //d3.select(\"#tooltip\").classed(\"hidden\", true);\n    //                 spokeHighlightOut(d);\n    //             })\n    //             .on(\"click\", function(d) { \n    //                 displayDetailsBox(d, d.pos, game, CIV, data);\n    //             });\n    //         var unlocks = spokes.selectAll(\".unlocks\")\n    //             .data(function(d) {\n    //                 return d.unlocks;\n    //             })\n    //             .enter()\n    //             .filter(function(d) {\n    //                 if (d.arcEnd || d.arcBack) {\n    //                     return true;\n    //                 }\n    //                 return false;\n    //             })\n    //             .append(\"g\")\n    //             .attr(\"class\", function(d) {\n    //                 return \"unlock opaque \" + d.ref.id + \"\" + d.pos;\n    //             });\n    //         var unlockArcs = unlocks.append(\"path\")\n    //             .attr(\"class\", function(d) {\n    //                 return \"unlockArc\";\n    //             })\n    //             .attr(\"rank\", function(d) {\n    //                 return d.rank;\n    //             })\n    //             .style(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             })\n    //             .attr(\"d\", unlockArc);\n    //         var unlockSquares = unlocks.selectAll(\".unlockSquare\")\n    //             .data(function(d) {\n    //                 return d.lreq;\n    //             })\n    //             .enter().append(\"g\")\n    //             .attr(\"transform\", function(d) {\n    //                 var ang = d.dist * (360 / data.displayed.length);\n    //                 return \"rotate(\" + ang + \") translate(0, \" + (-(width/2) + 145 - (14 * d.arcRank)) + \")\";\n    //             })\n    //             .attr(\"class\", \"unlockSquare\");\n    //         unlockSquares.append(\"rect\")\n    //             .attr(\"x\", -2.5)\n    //             .attr(\"y\", -0.75)\n    //             .attr(\"width\", 5)\n    //             .attr(\"height\", 5)\n    //             .attr(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             });\n    //         var unlockIcons = spokes.selectAll(\".unlockIcon\")\n    //             .data(function(d) {\n    //                 return d.unlocks;\n    //             })\n    //             .enter() \n    //             .append(\"image\")\n    //             .attr(\"class\", \"unlockIcon\")\n    //             .attr(\"transform\", function(d) {\n    //                 if (d.pos > (data.displayed.length / 2)) {\n    //                     return \"translate(6, \" + (-(width / 2) + (142 - (14 * d.rank))) + \") rotate(90)\";\n    //                 }\n    //                 return \"translate(-6, \" + (-(width / 2) + (153 - (14 * d.rank))) + \") rotate(270)\";\n    //             })\n    //             .attr(\"height\", 13)\n    //             .attr(\"width\", 13)\n    //             .attr(\"xlink:href\", function(d) {\n    //                 var link;\n    //                 if ((d.ref.cat === \"units\" || d.ref.cat === \"buildings\") && \n    //                     !(game === \"civ1\" || game === \"civ2\")) {\n    //                     if (d.ref[CIV.ilization]) {\n    //                         link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref[CIV.ilization].id + \".png\";\n    //                     } else {\n    //                         link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.CIVILIZATION_ALL.id + \".png\";\n    //                     }\n    //                 } else {\n    //                     link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.id + \".png\";\n    //                 }\n    //                 return link;\n    //             })\n    //             .on(\"mouseover\", function(d) {\n    //                 d3.selectAll(\".unlockIcon\")\n    //                     .classed(\"fade\", true);\n    //                 d3.selectAll(\".\" + d.ref.id + \"\" + d.pos)\n    //                     .classed(\"opaque\", false);\n    //                 d3.select(this)\n    //                     .classed(\"fade\", false);\n    //                 //spokeHighlightIn(d.ref);\n    //             })\n    //             .on(\"mouseout\", function(d) {\n    //                 d3.selectAll(\".unlockIcon\")\n    //                     .classed(\"fade\", false);\n    //                 d3.selectAll(\".unlock\")\n    //                     .classed(\"opaque\", true);\n    //                 //spokeHighlightOut(d.ref);\n    //             })\n    //             .on(\"click\", function(d) { \n    //                 displayDetailsBox(d.ref, d.pos, game, CIV, data);\n    //             });\n    //         // Update icons with unique civilization units\n    //         if ((+(CIV.game[3])) > 2) {\n    //             d3.select(\"#selectCiv\")\n    //                 .on(\"change\", function(d) {\n    //                     CIV.ilization = this.options[this.selectedIndex].value;\n    //                     d3.select(\"#description\").classed(\"hidden\", true);\n    //                     unlockIcons.attr(\"xlink:href\", function(d) {\n    //                         var link;\n    //                         if (d.ref.cat === \"units\" || d.ref.cat === \"buildings\") {\n    //                             if (d.ref[CIV.ilization]) {\n    //                                 link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref[CIV.ilization].id + \".png\";\n    //                             } else {\n    //                                 link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.CIVILIZATION_ALL.id + \".png\";\n    //                             }\n    //                         } else {\n    //                             link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.id + \".png\";\n    //                         }\n    //                         return link;\n    //                     });\n    //                 });\n    //         }\n    //         var reqArcs = wheel.append(\"g\")\n    //             .attr(\"class\", \"reqArcs\");\n    //         var reqGroup = reqArcs.selectAll(\".reqGroup\")\n    //                 .data(data.displayed)\n    //             .enter().append(\"g\")\n    //                 .attr(\"class\", function(d) {\n    //                     var className = d.id + \" reqGroup\";\n    //                     return className;\n    //                 })\n    //                 .attr(\"transform\", function(d) {\n    //                     var ang = d.pos * (360 / data.displayed.length) + CIV.angleShift;\n    //                     return \"rotate(\" + ang +\")\";\n    //                 })\n    //                 .on(\"click\", function(d) { });\n    //         var reqArc = reqGroup.append(\"path\")\n    //             .attr(\"class\", \"spokeArc\")\n    //             .style(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             })\n    //             .attr(\"d\", arc);\n    //         var reqPin = reqGroup.append(\"line\")\n    //             .attr(\"class\", \"spokePin\")\n    //             .attr(\"x1\", 0)\n    //             .attr(\"y1\", function(d) {\n    //                 return -(CIV.arcBase + 7 + (CIV.arcSpace * d.arcRank));\n    //             })\n    //             .attr(\"x2\", 0)\n    //             .attr(\"y2\", function(d) {\n    //                 return -(CIV.arcBase - 5 + (CIV.arcSpace * d.arcRank));\n    //             })\n    //             .attr(\"stroke-width\", CIV.arcWidth)\n    //             .attr(\"stroke\", function(d) {\n    //                 return CIV.color(d.pos); \n    //             });\n    //         var reqSquares = reqGroup.selectAll(\".reqSquare\")\n    //             .data(function(d) {\n    //                 return d.lreq;\n    //             })\n    //             .enter().append(\"g\")\n    //             .attr(\"transform\", function(d) {\n    //                 var ang = d.dist * (360 / data.displayed.length);\n    //                 return \"rotate(\" + ang + \") translate(0, \" + (-CIV.arcBase - 2.5 - (CIV.arcSpace * d.arcRank)) + \")\";\n    //             })\n    //             .attr(\"class\", \"reqSquare\");\n    //         reqSquares.append(\"rect\")\n    //             .attr(\"x\", -2.5)\n    //             .attr(\"y\", -0.75)\n    //             .attr(\"width\", 5)\n    //             .attr(\"height\", 5)\n    //             .attr(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             });\n    //         var optCircles = reqGroup.selectAll(\".optCircle\")\n    //             .data(function(d) {\n    //                 return d.lopt;\n    //             })\n    //             .enter().append(\"g\")\n    //             .attr(\"transform\", function(d) {\n    //                 var ang = d.dist * (360 / data.displayed.length);\n    //                 return \"rotate(\" + ang + \") translate(0, \" + (-CIV.arcBase - 2.5 - (CIV.arcSpace * d.arcRank)) + \")\";\n    //             })\n    //             .attr(\"class\", \"optCircle\");\n    //         optCircles.append(\"circle\")\n    //             .attr(\"cx\", 0)\n    //             .attr(\"cy\", 2)\n    //             .attr(\"r\", 2.5)\n    //             .attr(\"stroke-width\", 1)\n    //             .attr(\"stroke\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             })\n    //             .attr(\"fill\", \"white\");\n    //         // Add the center image\n    //         wheel.append(\"image\")\n    //             .attr(\"x\", -75)\n    //             .attr(\"y\", -75)\n    //             .attr(\"width\", 150)\n    //             .attr(\"height\", 150)\n    //             .attr(\"xlink:href\", game + \"/img/\" + game + \"-center.png\");\n    //     }\n    // });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"CivTechs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, empire), React.createElement(\"div\", {\n    id: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"Civilization Technologies Wheel\"), React.createElement(\"div\", {\n    id: \"leftIntro\",\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, \"The Challenge of History\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, \"In the Sid Meier\\u2019s Civilization series of games, the objective is to build an empire that will stand the test of time. Advances in knowledge are represented by the technology tree, a diagram that shows the progression of advances and what things they enable for the player. For example, a tank might require the technology industrialism, which requires electricity and assembly line. This tree of relationships spans the whole of human history, from agriculture to space flight.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, \"However, representing so much history and culture in one tree has made for some very complex, albeit attractive, diagrams. The goal of this project was to make the encoding of information in the technology tree consistent, explicit, and as much as possible, condensed on to one screen. Where the trees in the other Civilization games left relationships unclear and spread out, the Technologies wheel puts it all in one place.\")), React.createElement(\"div\", {\n    id: \"rightIntro\",\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, \"How to Read the Wheel\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, \"The wheel is divided into two components, spokes and arcs:\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, \"Spokes\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: spoke,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, \"There is one spoke for every advance in Civilization\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: largeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, \"Large icons show what advance the spoke represents\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: smallIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, \"Small icons show what buildings, units, and other things an advance gives you\"))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"Arcs\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: arc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"Arcs show relationships between advances\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: arcPin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, \"Perpendicular lines point to the spoke with the arc's origin advance\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: arcSquare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"Squares on a spoke indicate that the arc's origin is required for this advance\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: arcCircle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, \"Circles on a spoke indicate that the arc's origin is optional for this advance\"))))), React.createElement(\"div\", {\n    id: \"selectOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"selectBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, \"Select a Civilization Game:\"), React.createElement(\"select\", {\n    id: \"selectGame\",\n    onChange: selectGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"civ1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, \"Civilization\"), React.createElement(\"option\", {\n    value: \"civ2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }, \"Civilization II\"), React.createElement(\"option\", {\n    value: \"civ3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, \"Civilization III\"), React.createElement(\"option\", {\n    value: \"civ3ptw\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, \"Civilization III: Play the World\"), React.createElement(\"option\", {\n    value: \"civ3con\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, \"Civilization III: Conquests\"), React.createElement(\"option\", {\n    value: \"civ4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, \"Civilization IV\"), React.createElement(\"option\", {\n    value: \"civ4war\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, \"Civilization IV: Warlords\"), React.createElement(\"option\", {\n    value: \"civ4bts\",\n    defaultValue: \"selected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, \"Civilization IV: Beyond the Sword\"))), +game[3] >= 3 && React.createElement(\"div\", {\n    className: \"selectBox\",\n    id: \"selectCivBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, \"Select a Civilization's Unique Units (and if available, buildings):\"), React.createElement(\"select\", {\n    id: \"selectCiv\",\n    onChange: selectEmpire,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"CIVILIZATION_ALL\",\n    defaultValue: \"selected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }, \"Common Units & Buildings\")))), React.createElement(\"div\", {\n    id: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"civWheel\",\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"tooltip\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"tipHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"tipImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"tipName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"tipCloseButton\",\n    name: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"p\", {\n    id: \"tipKind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"tipTraits\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"tipCostLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }, \"Cost: \", React.createElement(\"span\", {\n    id: \"tipCost\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    id: \"tipCostType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"tipReqs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"tipSubTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }, \"Requirements\"), React.createElement(\"div\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"tipNoLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, \"Available at game start\"), React.createElement(\"p\", {\n    id: \"tipMandLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }, \"You must have: \", React.createElement(\"span\", {\n    id: \"tipMand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    id: \"tipPlusLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489\n    },\n    __self: this\n  }, \"plus\"), React.createElement(\"p\", {\n    id: \"tipOptLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }, \"You need one of: \", React.createElement(\"span\", {\n    id: \"tipOpt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    id: \"tipLeads\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"tipSubTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, \"Leads to\"), React.createElement(\"div\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"tipMldLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }, \"Must have for: \", React.createElement(\"span\", {\n    id: \"tipMld\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    id: \"tipOldLine\",\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, \"Optional for: \", React.createElement(\"span\", {\n    id: \"tipOld\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  })))))));\n}\n\nexport default CivTechs;","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/components/CivTechs.js"],"names":["React","useState","scaleOrdinal","d3_scaleOrdinal","schemeCategory10","d3_schemeCategory10","arc","arcCircle","arcPin","arcSquare","largeIcon","smallIcon","spoke","CivTechs","arcSpace","empire","margin","top","right","bottom","left","width","CIV","height","defaults","arcBase","arcWidth","color","coords","game","ilization","dataTypes","angleShift","setGame","selectGame","event","target","value","selectEmpire","makeWheel","civilization","path"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport {scaleOrdinal as d3_scaleOrdinal} from 'd3-scale';\nimport {schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\n\nimport arc from '../img/arc.gif';\nimport arcCircle from '../img/arc_circle.gif';\nimport arcPin from '../img/arc_pin.gif';\nimport arcSquare from '../img/arc_square.gif';\nimport largeIcon from '../img/large_icon.gif';\nimport smallIcon from '../img/small_icon.gif';\nimport spoke from '../img/spoke.gif';\n\nimport '../css/CivTechs.css';\n\n\n\nfunction CivTechs() {\n  let arcSpace = 18;\n  let empire = 'CIVILIZATION_ALL';\n  const margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = CIV.width - margin.left - margin.right,\n    height = CIV.width - margin.top - margin.bottom;\n\n  const defaults = {\n    arcBase: 100,\n    arcSpace: 14,\n    arcWidth: 1.5,\n    color: d3_scaleOrdinal(d3_schemeCategory10),\n    coords: [0, 0],\n    game: 'civ4bts',\n    ilization: 'CIVILIZATION_ALL',\n    dataTypes: [\n      'units',\n      'buildings',\n      'religions',\n      'build',\n      'resources',\n      'projects',\n      'promotions',\n      'civics'\n    ],\n    width: 1200,\n    height: 1200,\n    angleShift: 2\n  };\n\n  const [game, setGame] = useState('civ4bts');\n\n  // const selectGame = () => {\n  //   // d3.selectAll('.civWheel').remove();\n  //   // d3.select('#tooltip').classed('hidden', true);\n\n  //   selectedCivilization = 'CIVILIZATION_ALL';\n  //   document.getElementById('selectCiv').value = CIV.ilization;\n\n  //   var selectCiv = document.getElementById('selectCiv');\n  //   // selectCiv.options.length = 1;\n\n  //   makeGame(this);\n  // }\n  const selectGame = (event) => {\n    setGame(event.target.value);\n\n    if ((+(game[3])) < 4) {\n        arcSpace = 16;\n    } else {\n        arcSpace = 18;\n    }\n\n    // makeWheel(CIV.game);\n  };\n\n  const selectEmpire = (event) => {\n    empire = event.target.value;\n  };\n\n  function makeWheel(game, civilization) {\n\n    const path = `${game}/civdata.json`;\n\n    // d3.json(path, function (data) {\n\n    //     // Functions to process data so wheel can be drawn        \n    //     setupData(data);\n    //     orderDisplayed(data);\n    //     setupArcs(data);\n        \n    //     // Debug processed data\n    //     console.log(data.displayed);\n\n    //     // Populate select civilizations drop-down\n    //     if ((+(CIV.game[3])) > 2) {\n    //         data.civilizations.forEach(function (c) {\n    //             d3.select(\"#selectCiv\")\n    //                 .append(\"option\")\n    //                 .attr(\"value\", c.id)\n    //                 .text(c.name);\n    //         });\n    //     }\n\n    //     drawWheel();\n        \n    //     // Draw portions of the wheel\n    //     function drawWheel () {\n    //         var wheel = svg.append(\"g\")\n    //             .attr(\"class\", \"wheel\")\n    //             .attr(\"transform\", \"translate(\" + (width / 2) + \" \" + (height / 2) +\")\");\n\n    //         wheel.append(\"image\") // pie \"slice\" to indicate start of spokes\n    //             .attr(\"id\", \"startSlice\")\n    //             .attr(\"x\", 0)\n    //             .attr(\"y\", -(height/2))\n    //             .attr(\"width\", 167)\n    //             .attr(\"height\", (height/2))\n    //             .attr(\"xlink:href\", \"img/startSlice.png\");\n\n    //         var spokeAll = wheel.append(\"g\")\n    //             .attr(\"class\", \"spokeAll\");\n                \n    //         var spokes = spokeAll.selectAll(\".spoke\")\n    //                 .data(data.displayed)\n    //             .enter().append(\"g\")\n    //                 .attr(\"class\", function(d) {\n    //                     var className = d.id + \" spoke\";\n    //                     return className;\n    //                 })\n    //                 .attr(\"transform\", function(d) {\n    //                     var ang = d.pos * (360 / data.displayed.length) + CIV.angleShift;\n    //                     return \"rotate(\" + ang +\")\";\n    //                 })\n    //                 .on(\"click\", function(d) { });\n\n    //         var spokeLine = spokes.append(\"line\") // Spoke lines from center\n    //             .attr(\"class\", \"spokeLine\")\n    //             .attr(\"x1\", 0)\n    //             .attr(\"y1\", function(d) {\n    //                 if (!d.requires && !d.optional) {\n    //                     return 0;\n    //                 } \n    //                 return -(CIV.arcBase + (CIV.arcSpace * d.spokeRank));\n    //             })\n    //             .attr(\"x2\", 0)\n    //             .attr(\"y2\", function(d) {\n    //                 return -(width / 2) + 160 - (d.unlocks.length * 14);\n    //             });\n                \n    //         var techIcons = spokes.append(\"image\") // Displayed item icons\n    //             .attr(\"class\", \"techImg\")\n    //             .attr(\"transform\", function(d) {\n    //                 if (d.pos > (data.displayed.length / 2)) {\n    //                     return \"translate(10, \" + (-(width / 2) + 157) + \") rotate(90)\";\n    //                 }\n    //                 return \"translate(-10, \" + (-(width / 2) + 182) + \") rotate(270)\";\n    //             })\n    //             .attr(\"height\", 25)\n    //             .attr(\"width\", 25)\n    //             .attr(\"xlink:href\", function(d) {\n    //                 var link;\n    //                 if (d.cat === \"units\" || d.cat === \"buildings\") {\n    //                     if (d[CIV.ilization]) {\n    //                         link = game + \"/img/\" + d.cat + \"/\" + d[CIV.ilization].id + \".png\";\n    //                     } else {\n    //                         link = game + \"/img/\" + d.cat + \"/\" + d.CIVILIZATION_ALL.id + \".png\";    \n    //                     }\n    //                 } else {\n    //                     link = game + \"/img/\" + d.cat + \"/\" + d.id + \".png\";\n    //                 }\n    //                 return link;\n    //             })\n    //             .on(\"mouseover\", function(d) {\n    //                 var tipName = \"\";\n    //                 if (d.cat === \"units\" || d.cat === \"buildings\") {\n    //                     if (d[CIV.ilization]) {\n    //                         tipName = d[CIV.ilization].name;\n    //                     } else {\n    //                         tipName = d.CIVILIZATION_ALL.name;\n    //                     }\n                        \n    //                 } else {\n    //                     tipName = d.name;\n    //                 }\n    //                     spokeHighlightIn(d, data);\n    //             })\n    //             .on(\"mouseout\", function(d) {\n    //                 //d3.select(\"#tooltip\").classed(\"hidden\", true);\n    //                 spokeHighlightOut(d);\n    //             })\n    //             .on(\"click\", function(d) { \n    //                 displayDetailsBox(d, d.pos, game, CIV, data);\n    //             });\n\n    //         var unlocks = spokes.selectAll(\".unlocks\")\n    //             .data(function(d) {\n    //                 return d.unlocks;\n    //             })\n    //             .enter()\n    //             .filter(function(d) {\n    //                 if (d.arcEnd || d.arcBack) {\n    //                     return true;\n    //                 }\n    //                 return false;\n    //             })\n    //             .append(\"g\")\n    //             .attr(\"class\", function(d) {\n    //                 return \"unlock opaque \" + d.ref.id + \"\" + d.pos;\n    //             });\n\n    //         var unlockArcs = unlocks.append(\"path\")\n    //             .attr(\"class\", function(d) {\n    //                 return \"unlockArc\";\n    //             })\n    //             .attr(\"rank\", function(d) {\n    //                 return d.rank;\n    //             })\n    //             .style(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             })\n    //             .attr(\"d\", unlockArc);\n\n    //         var unlockSquares = unlocks.selectAll(\".unlockSquare\")\n    //             .data(function(d) {\n    //                 return d.lreq;\n    //             })\n    //             .enter().append(\"g\")\n    //             .attr(\"transform\", function(d) {\n    //                 var ang = d.dist * (360 / data.displayed.length);\n    //                 return \"rotate(\" + ang + \") translate(0, \" + (-(width/2) + 145 - (14 * d.arcRank)) + \")\";\n    //             })\n    //             .attr(\"class\", \"unlockSquare\");\n                \n    //         unlockSquares.append(\"rect\")\n    //             .attr(\"x\", -2.5)\n    //             .attr(\"y\", -0.75)\n    //             .attr(\"width\", 5)\n    //             .attr(\"height\", 5)\n    //             .attr(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             });\n\n    //         var unlockIcons = spokes.selectAll(\".unlockIcon\")\n    //             .data(function(d) {\n    //                 return d.unlocks;\n    //             })\n    //             .enter() \n    //             .append(\"image\")\n    //             .attr(\"class\", \"unlockIcon\")\n    //             .attr(\"transform\", function(d) {\n    //                 if (d.pos > (data.displayed.length / 2)) {\n    //                     return \"translate(6, \" + (-(width / 2) + (142 - (14 * d.rank))) + \") rotate(90)\";\n    //                 }\n    //                 return \"translate(-6, \" + (-(width / 2) + (153 - (14 * d.rank))) + \") rotate(270)\";\n    //             })\n    //             .attr(\"height\", 13)\n    //             .attr(\"width\", 13)\n    //             .attr(\"xlink:href\", function(d) {\n    //                 var link;\n    //                 if ((d.ref.cat === \"units\" || d.ref.cat === \"buildings\") && \n    //                     !(game === \"civ1\" || game === \"civ2\")) {\n    //                     if (d.ref[CIV.ilization]) {\n    //                         link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref[CIV.ilization].id + \".png\";\n    //                     } else {\n    //                         link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.CIVILIZATION_ALL.id + \".png\";\n    //                     }\n    //                 } else {\n    //                     link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.id + \".png\";\n    //                 }\n    //                 return link;\n    //             })\n    //             .on(\"mouseover\", function(d) {\n    //                 d3.selectAll(\".unlockIcon\")\n    //                     .classed(\"fade\", true);\n    //                 d3.selectAll(\".\" + d.ref.id + \"\" + d.pos)\n    //                     .classed(\"opaque\", false);\n    //                 d3.select(this)\n    //                     .classed(\"fade\", false);\n\n    //                 //spokeHighlightIn(d.ref);\n    //             })\n    //             .on(\"mouseout\", function(d) {\n    //                 d3.selectAll(\".unlockIcon\")\n    //                     .classed(\"fade\", false);\n    //                 d3.selectAll(\".unlock\")\n    //                     .classed(\"opaque\", true);\n\n    //                 //spokeHighlightOut(d.ref);\n    //             })\n    //             .on(\"click\", function(d) { \n    //                 displayDetailsBox(d.ref, d.pos, game, CIV, data);\n    //             });\n\n\n    //         // Update icons with unique civilization units\n    //         if ((+(CIV.game[3])) > 2) {\n    //             d3.select(\"#selectCiv\")\n    //                 .on(\"change\", function(d) {\n    //                     CIV.ilization = this.options[this.selectedIndex].value;\n    //                     d3.select(\"#description\").classed(\"hidden\", true);\n\n    //                     unlockIcons.attr(\"xlink:href\", function(d) {\n    //                         var link;\n    //                         if (d.ref.cat === \"units\" || d.ref.cat === \"buildings\") {\n    //                             if (d.ref[CIV.ilization]) {\n    //                                 link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref[CIV.ilization].id + \".png\";\n    //                             } else {\n    //                                 link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.CIVILIZATION_ALL.id + \".png\";\n    //                             }\n    //                         } else {\n    //                             link = game + \"/img/\" + d.ref.cat + \"/\" + d.ref.id + \".png\";\n    //                         }\n    //                         return link;\n    //                     });\n    //                 });\n    //         }\n\n    //         var reqArcs = wheel.append(\"g\")\n    //             .attr(\"class\", \"reqArcs\");\n\n    //         var reqGroup = reqArcs.selectAll(\".reqGroup\")\n    //                 .data(data.displayed)\n    //             .enter().append(\"g\")\n    //                 .attr(\"class\", function(d) {\n    //                     var className = d.id + \" reqGroup\";\n    //                     return className;\n    //                 })\n    //                 .attr(\"transform\", function(d) {\n    //                     var ang = d.pos * (360 / data.displayed.length) + CIV.angleShift;\n    //                     return \"rotate(\" + ang +\")\";\n    //                 })\n    //                 .on(\"click\", function(d) { });\n\n    //         var reqArc = reqGroup.append(\"path\")\n    //             .attr(\"class\", \"spokeArc\")\n    //             .style(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             })\n    //             .attr(\"d\", arc);\n                \n    //         var reqPin = reqGroup.append(\"line\")\n    //             .attr(\"class\", \"spokePin\")\n    //             .attr(\"x1\", 0)\n    //             .attr(\"y1\", function(d) {\n    //                 return -(CIV.arcBase + 7 + (CIV.arcSpace * d.arcRank));\n    //             })\n    //             .attr(\"x2\", 0)\n    //             .attr(\"y2\", function(d) {\n    //                 return -(CIV.arcBase - 5 + (CIV.arcSpace * d.arcRank));\n    //             })\n    //             .attr(\"stroke-width\", CIV.arcWidth)\n    //             .attr(\"stroke\", function(d) {\n    //                 return CIV.color(d.pos); \n    //             });\n                \n    //         var reqSquares = reqGroup.selectAll(\".reqSquare\")\n    //             .data(function(d) {\n    //                 return d.lreq;\n    //             })\n    //             .enter().append(\"g\")\n    //             .attr(\"transform\", function(d) {\n    //                 var ang = d.dist * (360 / data.displayed.length);\n    //                 return \"rotate(\" + ang + \") translate(0, \" + (-CIV.arcBase - 2.5 - (CIV.arcSpace * d.arcRank)) + \")\";\n    //             })\n    //             .attr(\"class\", \"reqSquare\");\n                \n    //         reqSquares.append(\"rect\")\n    //             .attr(\"x\", -2.5)\n    //             .attr(\"y\", -0.75)\n    //             .attr(\"width\", 5)\n    //             .attr(\"height\", 5)\n    //             .attr(\"fill\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             });\n                \n    //         var optCircles = reqGroup.selectAll(\".optCircle\")\n    //             .data(function(d) {\n    //                 return d.lopt;\n    //             })\n    //             .enter().append(\"g\")\n    //             .attr(\"transform\", function(d) {\n    //                 var ang = d.dist * (360 / data.displayed.length);\n    //                 return \"rotate(\" + ang + \") translate(0, \" + (-CIV.arcBase - 2.5 - (CIV.arcSpace * d.arcRank)) + \")\";\n    //             })\n    //             .attr(\"class\", \"optCircle\");\n            \n    //         optCircles.append(\"circle\")\n    //             .attr(\"cx\", 0)\n    //             .attr(\"cy\", 2)\n    //             .attr(\"r\", 2.5)\n    //             .attr(\"stroke-width\", 1)\n    //             .attr(\"stroke\", function(d) {\n    //                 return CIV.color(d.pos);\n    //             })\n    //             .attr(\"fill\", \"white\");\n\n    //         // Add the center image\n    //         wheel.append(\"image\")\n    //             .attr(\"x\", -75)\n    //             .attr(\"y\", -75)\n    //             .attr(\"width\", 150)\n    //             .attr(\"height\", 150)\n    //             .attr(\"xlink:href\", game + \"/img/\" + game + \"-center.png\");\n    //     }\n\n    // });\n\n}\n\n  return (\n    <div className='CivTechs'>\n      <p>{empire}</p>\n      <div id='container'>\n        <div id='intro'>\n          <h1 className='title'>Civilization Technologies Wheel</h1>\n          <div id='leftIntro' className='col'>\n            <h2>The Challenge of History</h2>\n            <p>In the Sid Meier’s Civilization series of games, the objective is to build an empire that will stand the test of time. Advances in knowledge are represented by the technology tree, a diagram that shows the progression of advances and what things they enable for the player. For example, a tank might require the technology industrialism, which requires electricity and assembly line. This tree of relationships spans the whole of human history, from agriculture to space flight.</p>\n            <p>However, representing so much history and culture in one tree has made for some very complex, albeit attractive, diagrams. The goal of this project was to make the encoding of information in the technology tree consistent, explicit, and as much as possible, condensed on to one screen. Where the trees in the other Civilization games left relationships unclear and spread out, the Technologies wheel puts it all in one place.</p>\n          </div>\n          <div id='rightIntro' className='col'>\n            <h2>How to Read the Wheel</h2>\n            <p>The wheel is divided into two components, spokes and arcs:</p>\n            <h3>Spokes</h3>\n            <ul>\n              <li><img src={spoke} /> <p>There is one spoke for every advance in Civilization</p></li>\n              <li><img src={largeIcon} /> <p>Large icons show what advance the spoke represents</p></li>\n              <li><img src={smallIcon} /> <p>Small icons show what buildings, units, and other things an advance gives you</p></li>\n            </ul>\n            <h3>Arcs</h3>\n            <ul>\n              <li><img src={arc} /> <p>Arcs show relationships between advances</p></li>\n              <li><img src={arcPin} /> <p>Perpendicular lines point to the spoke with the arc's origin advance</p></li>\n              <li><img src={arcSquare} /> <p>Squares on a spoke indicate that the arc's origin is required for this advance</p></li>\n              <li><img src={arcCircle} /> <p>Circles on a spoke indicate that the arc's origin is optional for this advance</p></li>\n            </ul>\n          </div>\n        </div>\n\n        <div id='selectOptions'>\n          <div className='selectBox'>\n            <p>Select a Civilization Game:</p>\n            <select id='selectGame' onChange={selectGame}>\n              <option value='civ1'>Civilization</option>\n              <option value='civ2'>Civilization II</option>\n              <option value='civ3'>Civilization III</option>\n              <option value='civ3ptw'>Civilization III: Play the World</option>\n              <option value='civ3con'>Civilization III: Conquests</option>\n              <option value='civ4'>Civilization IV</option>\n              <option value='civ4war'>Civilization IV: Warlords</option>\n              <option value='civ4bts' defaultValue='selected'>Civilization IV: Beyond the Sword</option>\n            </select>\n          </div>\n          {((+(game[3])) >= 3) &&\n            <div className='selectBox' id='selectCivBox'>\n              <p>Select a Civilization's Unique Units (and if available, buildings):</p>\n              <select id='selectCiv' onChange={selectEmpire}>\n                <option value='CIVILIZATION_ALL' defaultValue='selected'>Common Units &amp; Buildings</option>\n              </select>\n            </div>\n          }\n        </div>\n\n        <div id='chart'>\n          <svg\n            className='civWheel'\n            width={width + margin.left + margin.right}\n            height={height + margin.top + margin.bottom}\n          >\n            <g transform={`translate(${margin.left}, ${margin.top})`}>\n            </g>\n          </svg>\n        </div>\n\n        <div id='tooltip' className='hidden'>\n          <div id='tipHead'>\n            <img id='tipImg'></img>\n            <p id='tipName'></p>\n            <button id='tipCloseButton' name='reset'>X</button>\n            <p id='tipKind'></p>\n            <div className='clear'></div>\n          </div>\n          <div id='tipTraits'>\n            <p id='tipCostLine' className='hidden'>Cost: <span id='tipCost'></span> <span id='tipCostType'></span></p>\n          </div>\n          <div id='tipReqs'>\n            <p className='tipSubTitle'>Requirements</p>\n            <div className='desc'>\n              <p id='tipNoLine' className='hidden'>Available at game start</p>\n              <p id='tipMandLine' className='hidden'>You must have: <span id='tipMand'></span></p>\n              <p id='tipPlusLine' className='hidden'>plus</p>\n              <p id='tipOptLine' className='hidden'>You need one of: <span id='tipOpt'></span></p>\n            </div>\n          </div>\n          <div id='tipLeads' className='hidden'>\n            <p className='tipSubTitle'>Leads to</p>\n            <div className='desc'>\n              <p id='tipMldLine' className='hidden'>Must have for: <span id='tipMld'></span></p>\n              <p id='tipOldLine' className='hidden'>Optional for: <span id='tipOld'></span></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CivTechs;\n"]},"metadata":{},"sourceType":"module"}