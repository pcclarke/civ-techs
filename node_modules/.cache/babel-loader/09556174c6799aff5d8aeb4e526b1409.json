{"ast":null,"code":"var _jsxFileName = \"/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Civ4.js\";\nimport React from 'react';\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { arc as d3_arc } from 'd3-shape';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport startSlice from '../img/startSlice.png';\n\nfunction Civ4(props) {\n  const angleShift = props.angleShift,\n        arcBase = props.arcBase,\n        arcSpace = props.arcSpace,\n        arcWidth = props.arcWidth,\n        data = props.data,\n        empire = props.empire,\n        game = props.game,\n        width = props.width,\n        height = props.height,\n        margin = props.margin;\n  console.log(data.displayed);\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n  const unlockArc = d3_arc().innerRadius(d => arcBase + 342.5 + 14 * d.rank).outerRadius(d => arcBase + 342.6 + arcWidth + 14 * d.rank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcEnd);\n  return React.createElement(\"svg\", {\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"civTechs\",\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"wheel\",\n    transform: \"translate(\".concat(width / 2, \", \").concat(height / 2, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"image\", {\n    id: \"startSlice\",\n    x: 0,\n    y: -(height / 2),\n    width: 167,\n    height: height / 2,\n    xlinkHref: startSlice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"spokeAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" spoke\"),\n    key: \"spoke-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine\",\n    x1: 0,\n    y1: !d.requires && !d.optional ? 0 : -(arcBase + arcSpace * d.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - d.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"image\", {\n    className: \"techImg\",\n    height: 25,\n    width: 25,\n    transform: (() => d.pos > data.displayed.length / 2 ? \"translate(10, \".concat(-(width / 2) + 157, \") rotate(90)\") : \"translate(-10, \".concat(-(width / 2) + 182, \") rotate(270)\"))(),\n    xlinkHref: \"/\".concat(game, \"/img/\").concat(d.cat, \"/\").concat(d.id, \".png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), d.unlocks.map((u, j) => React.createElement(\"g\", {\n    key: \"unlock-\".concat(j),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, u.lreq && React.createElement(\"g\", {\n    className: \"unlock opaque \".concat(u.ref.id).concat(u.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"unlockArc\",\n    rank: u.rank,\n    fill: color(u.pos),\n    d: unlockArc(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), u.lreq.map((l, k) => React.createElement(\"g\", {\n    className: \"unlockSquare\",\n    key: \"unlock-square-\".concat(k),\n    transform: \"rotate(\".concat(l.dist * (360 / data.displayed.length), \") translate(0, \").concat(-(width / 2) + 145 - 14 * l.arcRank, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(l.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))), React.createElement(\"image\", {\n    className: \"unlockIcon\",\n    height: 13,\n    transform: (() => u.pos > data.displayed.length / 2 ? \"translate(6, \".concat(-(width / 2) + (142 - 14 * u.rank), \") rotate(90)\") : \"translate(-6, \".concat(-(width / 2) + (153 - 14 * d.rank), \") rotate(270)\"))(),\n    width: 13,\n    xlinkHref: () => {\n      let link;\n\n      if ((u.ref.cat === 'units' || u.ref.cat === 'buildings') && !(game === 'civ1' || game === 'civ2')) {\n        if (u.ref[empire]) {\n          link = \"\".concat(game, \"/img/\").concat(u.ref.cat, \"/\").concat(u.ref[empire].id, \".png\");\n        } else {\n          link = \"\".concat(game, \"/img/\").concat(u.ref.cat, \"/\").concat(u.ref.CIVILIZATION_ALL.id, \".png\");\n        }\n      } else {\n        link = \"\".concat(game, \"/img/\").concat(u.ref.cat, \"/\").concat(u.ref.id, \".png\");\n      }\n\n      console.log(link);\n      return link;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })))))))));\n}\n\nexport default Civ4;","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Civ4.js"],"names":["React","scaleOrdinal","d3_scaleOrdinal","arc","d3_arc","schemeCategory10","d3_schemeCategory10","startSlice","Civ4","props","angleShift","arcBase","arcSpace","arcWidth","data","empire","game","width","height","margin","console","log","displayed","color","unlockArc","innerRadius","d","rank","outerRadius","startAngle","arcBack","endAngle","arcEnd","left","right","top","bottom","map","i","id","pos","length","requires","optional","spokeRank","unlocks","cat","u","j","lreq","ref","l","k","dist","arcRank","link","CIVILIZATION_ALL"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {scaleOrdinal as d3_scaleOrdinal} from 'd3-scale';\nimport {arc as d3_arc} from 'd3-shape';\nimport {schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\n\nimport startSlice from '../img/startSlice.png';\n\nfunction Civ4(props) {\n  const {\n    angleShift,\n    arcBase,\n    arcSpace,\n    arcWidth,\n    data,\n    empire,\n    game,\n    width,\n    height,\n    margin,\n  } = props;\n\n  console.log(data.displayed);\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n\n  const unlockArc = d3_arc()\n    .innerRadius((d) => arcBase + 342.5 + (14 * d.rank))\n    .outerRadius((d) => (arcBase + 342.6 + arcWidth) + (14 * d.rank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcEnd);\n\n  return (\n    <svg\n      width={width + margin.left + margin.right}\n      height={height + margin.top + margin.bottom}\n    >\n      <g\n        className='civTechs'\n        transform={`translate(${margin.left}, ${margin.top})`}\n      >\n        <g\n          className='wheel'\n          transform={`translate(${width / 2}, ${height / 2})`}\n        >\n          <image\n            id='startSlice'\n            x={0}\n            y={-(height/2)}\n            width={167}\n            height={height/2}\n            xlinkHref={startSlice}\n          />\n            <g className='spokeAll'>\n            {\n              data.displayed.map((d, i) => (\n                <g\n                  className={`${d.id} spoke`}\n                  key={`spoke-${i}`}\n                  transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                >\n                  <line\n                    className='spokeLine'\n                    x1={0}\n                    y1={(!d.requires && !d.optional) ? 0 : -(arcBase + (arcSpace * d.spokeRank))}\n                    x2={0}\n                    y2={-(width / 2) + 160 - (d.unlocks.length * 14)}\n                  />\n                  <image\n                    className='techImg'\n                    height={25}\n                    width={25}\n                    transform={(() => (d.pos > (data.displayed.length / 2)) ?\n                      `translate(10, ${(-(width / 2) + 157)}) rotate(90)` :\n                      `translate(-10, ${(-(width / 2) + 182)}) rotate(270)`)()}\n                    xlinkHref={`/${game}/img/${d.cat}/${d.id}.png`}\n                  />\n                  {d.unlocks.map((u, j) => (\n                    <g key={`unlock-${j}`}>\n                      {u.lreq &&\n                        <g className={`unlock opaque ${u.ref.id}${u.pos}`}>\n                          <path\n                            className='unlockArc'\n                            rank={u.rank}\n                            fill={color(u.pos)}\n                            d={unlockArc(u)}\n                          />\n                          {u.lreq.map((l, k) => (\n                            <g\n                              className='unlockSquare'\n                              key={`unlock-square-${k}`}\n                              transform={`rotate(${l.dist * (360 / data.displayed.length)}) translate(0, ${(-(width/2) + 145 - (14 * l.arcRank))})`}\n                            >\n                              <rect\n                                x={-2.5}\n                                y={-0.75}\n                                width={5}\n                                height={5}\n                                fill={color(l.pos)}\n                              />\n                            </g>\n                          ))}\n                        </g>\n                      }\n                      <image\n                        className='unlockIcon'\n                        height={13}\n                        transform={(() => (u.pos > (data.displayed.length / 2)) ?\n                          `translate(6, ${(-(width / 2) + (142 - (14 * u.rank)))}) rotate(90)` :\n                          `translate(-6, ${(-(width / 2) + (153 - (14 * d.rank)))}) rotate(270)`)()}\n                        width={13}\n                        xlinkHref={(() => {\n                          let link;\n                          if ((u.ref.cat === 'units' || u.ref.cat === 'buildings') &&\n                              !(game === 'civ1' || game === 'civ2')) {\n                              if (u.ref[empire]) {\n                                  link = `${game}/img/${u.ref.cat}/${u.ref[empire].id}.png`;\n                              } else {\n                                  link = `${game}/img/${u.ref.cat}/${u.ref.CIVILIZATION_ALL.id}.png`;\n                              }\n                          } else {\n                              link = `${game}/img/${u.ref.cat}/${u.ref.id}.png`;\n                          }\n\n                          console.log(link);\n                          return link;\n                        })}\n                      />\n                    </g>\n                  ))}\n                </g>\n              ))\n            }\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Civ4;\n"]},"metadata":{},"sourceType":"module"}