{"ast":null,"code":"import _slicedToArray from \"/Users/pcclarke/Documents/GitHub/civ-techs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js\";\nimport React, { useState } from 'react';\nimport { getLeadsTo, getTechPrereqs } from '../libs/dataTools.js';\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { arc as d3_arc } from 'd3-shape';\nimport { schemeCategory10 as d3_schemeCategory10 } from 'd3-scale-chromatic';\nimport startSlice from '../img/startSlice.png';\n\nfunction Wheel(props) {\n  const angleShift = props.angleShift,\n        arcBase = props.arcBase,\n        arcSpace = props.arcSpace,\n        arcWidth = props.arcWidth,\n        data = props.data,\n        empire = props.empire,\n        game = props.game,\n        width = props.width,\n        height = props.height,\n        margin = props.margin;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFaded = _useState2[0],\n        setNotFaded = _useState2[1];\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n  const arc = d3_arc().innerRadius(d => arcBase + arcSpace * d.arcRank).outerRadius(d => arcBase + arcWidth + arcSpace * d.arcRank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcDist);\n  const unlockArc = d3_arc().innerRadius(d => arcBase + 342.5 + 14 * d.rank).outerRadius(d => arcBase + 342.6 + arcWidth + 14 * d.rank).startAngle(d => -1 * d.arcBack).endAngle(d => d.arcEnd);\n\n  const updateDataFade = d => {\n    let updateNotFaded = [d.id];\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed).map(e => e.id));\n    updateNotFaded = updateNotFaded.concat(getTechPrereqs(d, data).map(e => e.id));\n    setNotFaded(updateNotFaded);\n  };\n\n  console.log(data);\n  return React.createElement(\"svg\", {\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"civTechs\",\n    transform: \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"wheel\",\n    transform: \"translate(\".concat(width / 2, \", \").concat(height / 2, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"image\", {\n    id: \"startSlice\",\n    x: 0,\n    y: -(height / 2),\n    width: 167,\n    height: height / 2,\n    xlinkHref: startSlice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"spokeAll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" spoke\"),\n    key: \"spoke-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"spokeLine\",\n    x1: 0,\n    y1: !d.requires && !d.optional ? 0 : -(arcBase + arcSpace * d.spokeRank),\n    x2: 0,\n    y2: -(width / 2) + 160 - d.unlocks.length * 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"image\", {\n    className: \"techImg \".concat(notFaded.length > 0 && notFaded.indexOf(d.id) ? 'fade' : ''),\n    height: 25,\n    onMouseOver: () => updateDataFade(d),\n    transform: (() => d.pos > data.displayed.length / 2 ? \"translate(10, \".concat(-(width / 2) + 157, \") rotate(90)\") : \"translate(-10, \".concat(-(width / 2) + 182, \") rotate(270)\"))(),\n    width: 25,\n    xlinkHref: \"/\".concat(game, \"/\").concat(d.cat, \"/\").concat(d.id, \".png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), d.unlocks.map((u, j) => React.createElement(\"g\", {\n    key: \"unlock-\".concat(j),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, u.lreq && React.createElement(\"g\", {\n    className: \"unlock opaque \".concat(u.ref.id).concat(u.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"unlockArc\",\n    rank: u.rank,\n    fill: color(u.pos),\n    d: unlockArc(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), u.lreq.map((l, k) => React.createElement(\"g\", {\n    className: \"unlockSquare\",\n    key: \"unlock-square-\".concat(k),\n    transform: \"rotate(\".concat(l.dist * (360 / data.displayed.length), \") translate(0, \").concat(-(width / 2) + 145 - 14 * l.arcRank, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(l.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))), React.createElement(\"image\", {\n    className: \"unlockIcon\",\n    height: 13,\n    transform: (() => u.pos > data.displayed.length / 2 ? \"translate(6, \".concat(-(width / 2) + (142 - 14 * u.rank), \") rotate(90)\") : \"translate(-6, \".concat(-(width / 2) + (153 - 14 * u.rank), \") rotate(270)\"))(),\n    width: 13,\n    xlinkHref: (() => {\n      let link;\n\n      if ((u.ref.cat === 'units' || u.ref.cat === 'buildings') && !(game === 'civ1' || game === 'civ2')) {\n        if (u.ref[empire]) {\n          link = \"\".concat(game, \"/\").concat(u.ref.cat, \"/\").concat(u.ref[empire].id, \".png\");\n        } else {\n          link = \"\".concat(game, \"/\").concat(u.ref.cat, \"/\").concat(u.ref.CIVILIZATION_ALL.id, \".png\");\n        }\n      } else {\n        link = \"\".concat(game, \"/\").concat(u.ref.cat, \"/\").concat(u.ref.id, \".png\");\n      }\n\n      return link;\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))))), React.createElement(\"g\", {\n    className: \"reqArcs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, data.displayed.map((d, i) => React.createElement(\"g\", {\n    className: \"\".concat(d.id, \" reqGroup\"),\n    key: \"req-arcs-\".concat(i),\n    transform: \"rotate(\".concat(d.pos * (360 / data.displayed.length) + angleShift, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    className: \"spokeArc\",\n    d: arc(d),\n    fill: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"spokePin\",\n    x1: 0,\n    y1: -(arcBase + 7 + arcSpace * d.arcRank),\n    x2: 0,\n    y2: -(arcBase - 5 + arcSpace * d.arcRank),\n    strokeWidth: arcWidth,\n    stroke: color(d.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), d.lreq.map((r, j) => React.createElement(\"g\", {\n    className: \"reqSquare\",\n    key: \"req-square-\".concat(j),\n    transform: (() => {\n      const ang = r.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * r.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: -2.5,\n    y: -0.75,\n    width: 5,\n    height: 5,\n    fill: color(r.pos),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), d.lopt.map((o, j) => React.createElement(\"g\", {\n    className: \"optCircle\",\n    key: \"opt-circle-\".concat(j),\n    transform: (() => {\n      const ang = o.dist * (360 / data.displayed.length);\n      return \"rotate(\".concat(ang, \") translate(0, \").concat(-arcBase - 2.5 - arcSpace * d.arcRank, \")\");\n    })(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: 0,\n    cy: 2,\n    r: 2.5,\n    strokeWidth: 1,\n    stroke: color(o.pos),\n    fill: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })))))), React.createElement(\"image\", {\n    x: -75,\n    y: -75,\n    width: 150,\n    height: 150,\n    xlinkHref: \"\".concat(game, \"/\").concat(game, \"-center.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }))));\n}\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/components/Wheel.js"],"names":["React","useState","getLeadsTo","getTechPrereqs","scaleOrdinal","d3_scaleOrdinal","arc","d3_arc","schemeCategory10","d3_schemeCategory10","startSlice","Wheel","props","angleShift","arcBase","arcSpace","arcWidth","data","empire","game","width","height","margin","notFaded","setNotFaded","color","innerRadius","d","arcRank","outerRadius","startAngle","arcBack","endAngle","arcDist","unlockArc","rank","arcEnd","updateDataFade","updateNotFaded","id","concat","displayed","map","e","console","log","left","right","top","bottom","i","pos","length","requires","optional","spokeRank","unlocks","indexOf","cat","u","j","lreq","ref","l","k","dist","link","CIVILIZATION_ALL","r","ang","lopt","o"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport {getLeadsTo, getTechPrereqs} from '../libs/dataTools.js';\n\nimport {scaleOrdinal as d3_scaleOrdinal} from 'd3-scale';\nimport {arc as d3_arc} from 'd3-shape';\nimport {schemeCategory10 as d3_schemeCategory10} from 'd3-scale-chromatic';\n\nimport startSlice from '../img/startSlice.png';\n\nfunction Wheel(props) {\n  const {\n    angleShift,\n    arcBase,\n    arcSpace,\n    arcWidth,\n    data,\n    empire,\n    game,\n    width,\n    height,\n    margin,\n  } = props;\n\n  const [notFaded, setNotFaded] = useState([]);\n\n  const color = d3_scaleOrdinal(d3_schemeCategory10);\n\n  const arc = d3_arc()\n    .innerRadius((d) => arcBase + (arcSpace * d.arcRank))\n    .outerRadius((d) => (arcBase + arcWidth) + (arcSpace * d.arcRank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcDist);\n\n  const unlockArc = d3_arc()\n    .innerRadius((d) => arcBase + 342.5 + (14 * d.rank))\n    .outerRadius((d) => (arcBase + 342.6 + arcWidth) + (14 * d.rank))\n    .startAngle((d) => -1 * d.arcBack)\n    .endAngle((d) => d.arcEnd);\n\n  const updateDataFade = (d) => {\n    let updateNotFaded = [d.id];\n\n    updateNotFaded = updateNotFaded.concat(getLeadsTo(d, data.displayed).map((e) => e.id));\n    updateNotFaded = updateNotFaded.concat(getTechPrereqs(d, data).map((e) => e.id));\n    setNotFaded(updateNotFaded);\n  };\n\n  console.log(data);\n\n  return (\n    <svg\n      width={width + margin.left + margin.right}\n      height={height + margin.top + margin.bottom}\n    >\n      <g\n        className='civTechs'\n        transform={`translate(${margin.left}, ${margin.top})`}\n      >\n        <g\n          className='wheel'\n          transform={`translate(${width / 2}, ${height / 2})`}\n        >\n          <image\n            id='startSlice'\n            x={0}\n            y={-(height/2)}\n            width={167}\n            height={height/2}\n            xlinkHref={startSlice}\n          />\n            <g className='spokeAll'>\n            {\n              data.displayed.map((d, i) => (\n                <g\n                  className={`${d.id} spoke`}\n                  key={`spoke-${i}`}\n                  transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n                >\n                  <line\n                    className='spokeLine'\n                    x1={0}\n                    y1={(!d.requires && !d.optional) ? 0 : -(arcBase + (arcSpace * d.spokeRank))}\n                    x2={0}\n                    y2={-(width / 2) + 160 - (d.unlocks.length * 14)}\n                  />\n                  <image\n                    className={`techImg ${(notFaded.length > 0 && notFaded.indexOf(d.id)) ? 'fade' : ''}`}\n                    height={25}\n                    onMouseOver={() => updateDataFade(d)}\n                    transform={(() => (d.pos > (data.displayed.length / 2)) ?\n                      `translate(10, ${(-(width / 2) + 157)}) rotate(90)` :\n                      `translate(-10, ${(-(width / 2) + 182)}) rotate(270)`)()}\n                    width={25}\n                    xlinkHref={`/${game}/${d.cat}/${d.id}.png`}\n                  />\n                  {d.unlocks.map((u, j) => (\n                    <g key={`unlock-${j}`}>\n                      {u.lreq &&\n                        <g className={`unlock opaque ${u.ref.id}${u.pos}`}>\n                          <path\n                            className='unlockArc'\n                            rank={u.rank}\n                            fill={color(u.pos)}\n                            d={unlockArc(u)}\n                          />\n                          {u.lreq.map((l, k) => (\n                            <g\n                              className='unlockSquare'\n                              key={`unlock-square-${k}`}\n                              transform={`rotate(${l.dist * (360 / data.displayed.length)}) translate(0, ${(-(width/2) + 145 - (14 * l.arcRank))})`}\n                            >\n                              <rect\n                                x={-2.5}\n                                y={-0.75}\n                                width={5}\n                                height={5}\n                                fill={color(l.pos)}\n                              />\n                            </g>\n                          ))}\n                        </g>\n                      }\n                      <image\n                        className='unlockIcon'\n                        height={13}\n                        transform={(() => (u.pos > (data.displayed.length / 2)) ?\n                          `translate(6, ${(-(width / 2) + (142 - (14 * u.rank)))}) rotate(90)` :\n                          `translate(-6, ${(-(width / 2) + (153 - (14 * u.rank)))}) rotate(270)`)()}\n                        width={13}\n                        xlinkHref={(() => {\n                          let link;\n                          if ((u.ref.cat === 'units' || u.ref.cat === 'buildings') &&\n                              !(game === 'civ1' || game === 'civ2')) {\n                              if (u.ref[empire]) {\n                                  link = `${game}/${u.ref.cat}/${u.ref[empire].id}.png`;\n                              } else {\n                                  link = `${game}/${u.ref.cat}/${u.ref.CIVILIZATION_ALL.id}.png`;\n                              }\n                          } else {\n                              link = `${game}/${u.ref.cat}/${u.ref.id}.png`;\n                          }\n\n                          return link;\n                        })()}\n                      />\n                    </g>\n                  ))}\n                </g>\n              ))\n            }\n          </g>\n\n          <g className='reqArcs'>\n            {data.displayed.map((d, i) => (\n              <g\n                className={`${d.id} reqGroup`}\n                key={`req-arcs-${i}`}\n                transform={`rotate(${d.pos * (360 / data.displayed.length) + angleShift})`}\n              >\n                <path\n                  className='spokeArc'\n                  d={arc(d)}\n                  fill={color(d.pos)}\n                />\n                <line\n                  className='spokePin'\n                  x1={0}\n                  y1={-(arcBase + 7 + (arcSpace * d.arcRank))}\n                  x2={0}\n                  y2={-(arcBase - 5 + (arcSpace * d.arcRank))}\n                  strokeWidth={arcWidth}\n                  stroke={color(d.pos)}\n                />\n                {d.lreq.map((r, j) => (\n                  <g\n                    className='reqSquare'\n                    key={`req-square-${j}`}\n                    transform={(() => {\n                      const ang = r.dist * (360 / data.displayed.length);\n                      return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * r.arcRank))})`;\n                    })()}\n                  >\n                    <rect\n                      x={-2.5}\n                      y={-0.75}\n                      width={5}\n                      height={5}\n                      fill={color(r.pos)}\n                    />\n                  </g>\n                ))}\n                {d.lopt.map((o, j) => (\n                  <g\n                    className='optCircle'\n                    key={`opt-circle-${j}`}\n                    transform={(() => {\n                      const ang = o.dist * (360 / data.displayed.length);\n                      return `rotate(${ang}) translate(0, ${(-arcBase - 2.5 - (arcSpace * d.arcRank))})`;\n                    })()}\n                  >\n                    <circle\n                      cx={0}\n                      cy={2}\n                      r={2.5}\n                      strokeWidth={1}\n                      stroke={color(o.pos)}\n                      fill='white'\n                    />\n                  </g>\n                ))}\n              </g>\n            ))}\n          </g>\n\n          <image\n            x={-75}\n            y={-75}\n            width={150}\n            height={150}\n            xlinkHref={`${game}/${game}-center.png`}\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Wheel;\n"]},"metadata":{},"sourceType":"module"}