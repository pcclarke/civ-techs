{"ast":null,"code":"import { cloneDeep } from 'lodash';\nimport { getLeadsTo } from './dataTools.js';\nimport { orderDisplayed } from '../libs/orderDisplayed.js';\nimport { setupArcs } from '../libs/setupArcs.js';\nexport function setupData(data, nonTechnologies, installment, types) {\n  const sortedData = createUnlocks(data, nonTechnologies, installment, types);\n  const orderedData = orderDisplayed(sortedData, installment);\n  const setupArc = setupArcs(orderedData);\n  return setupArc;\n}\n\nfunction createUnlocks(data, nonTechnologies, installment, types) {\n  let sortedData = cloneDeep(data);\n  let displayed = [];\n  let unlocksList = []; // First, arrange the technologies by cost\n\n  if (installment > 3) {\n    sortedData.technologies.sort((a, b) => b.cost - a.cost);\n  } // Scoop up all the things each technology leads to and put it in the unlocks object\n\n\n  sortedData.technologies.forEach(d => {\n    let uniqueUnlocks = [];\n    let unlocks = [];\n    d.cat = 'technologies';\n    displayed.push(d);\n    ['buildings', 'build', 'civics', 'projects', 'promotions', 'religions', 'resources', 'units'].forEach(type => {\n      if (sortedData[type]) {\n        unlocks = unlocks.concat(getLeadsTo(d, sortedData[type]));\n      }\n    });\n\n    if (d.special) {\n      d.special.forEach(s => {\n        s.cat = 'specials';\n        s.requires = [];\n        s.requires.push(d.id);\n        unlocks.push(s);\n      });\n    }\n\n    unlocks.forEach((u, j) => {\n      let matchFound = 0;\n      unlocksList.forEach((l, k) => {\n        if (u.id === l.id) {\n          matchFound = 1;\n        }\n      });\n\n      if (matchFound !== 1) {\n        uniqueUnlocks.push(u);\n      }\n    });\n    unlocksList = unlocksList.concat(uniqueUnlocks);\n    let unlocksHandler = [];\n    uniqueUnlocks.forEach((u, j) => {\n      let unlocksItem = {};\n      unlocksItem.rank = j;\n      unlocksItem.ref = u;\n      unlocksHandler.push(unlocksItem);\n    });\n    d.unlocks = unlocksHandler;\n  });\n  sortedData.displayed = displayed; // Label data categories\n\n  types.forEach(t => {\n    if (sortedData[t]) {\n      sortedData[t].forEach(d => {\n        d.cat = t;\n      });\n    }\n  });\n  return sortedData;\n}","map":{"version":3,"sources":["/Users/pcclarke/Documents/GitHub/civ-techs/src/libs/setupData.js"],"names":["cloneDeep","getLeadsTo","orderDisplayed","setupArcs","setupData","data","nonTechnologies","installment","types","sortedData","createUnlocks","orderedData","setupArc","displayed","unlocksList","technologies","sort","a","b","cost","forEach","d","uniqueUnlocks","unlocks","cat","push","type","concat","special","s","requires","id","u","j","matchFound","l","k","unlocksHandler","unlocksItem","rank","ref","t"],"mappings":"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","sourcesContent":["import {cloneDeep} from 'lodash';\n\nimport {getLeadsTo} from './dataTools.js';\nimport {orderDisplayed}  from '../libs/orderDisplayed.js';\nimport {setupArcs} from '../libs/setupArcs.js';\n\nexport function setupData(data, nonTechnologies, installment, types) {\n  \n  const sortedData = createUnlocks(data, nonTechnologies, installment, types);\n  \n  const orderedData = orderDisplayed(sortedData, installment);\n  \n  const setupArc = setupArcs(orderedData);\n  \n\n\n\n  \n\n  return setupArc;\n}\n\nfunction createUnlocks(data, nonTechnologies, installment, types) {\n  let sortedData = cloneDeep(data);\n  let displayed = [];\n  let unlocksList = [];\n\n  // First, arrange the technologies by cost\n  if (installment > 3) {\n    sortedData.technologies.sort((a, b) => b.cost - a.cost);\n  }\n\n  // Scoop up all the things each technology leads to and put it in the unlocks object\n  sortedData.technologies.forEach((d) => {\n    let uniqueUnlocks = [];\n    let unlocks = [];\n\n    d.cat = 'technologies';\n    displayed.push(d);\n\n    [\n      'buildings',\n      'build',\n      'civics',\n      'projects',\n      'promotions',\n      'religions',\n      'resources',\n      'units'\n    ].forEach((type) => {\n      if (sortedData[type]) {\n        unlocks = unlocks.concat(getLeadsTo(d, sortedData[type]));\n      }\n    });\n\n    if (d.special) {\n      d.special.forEach((s) => {\n        s.cat = 'specials';\n        s.requires = [];\n        s.requires.push(d.id);\n        unlocks.push(s);\n      });\n    }\n\n    unlocks.forEach((u, j) => {\n      let matchFound = 0;\n      unlocksList.forEach((l, k) => {\n        if (u.id === l.id) {\n          matchFound = 1;\n        }\n      });\n      if (matchFound !== 1) {\n          uniqueUnlocks.push(u);\n      }\n    });\n    unlocksList = unlocksList.concat(uniqueUnlocks);\n\n    let unlocksHandler = [];\n    uniqueUnlocks.forEach((u, j) => {\n      let unlocksItem = {};\n      unlocksItem.rank = j;\n      unlocksItem.ref = u;\n      unlocksHandler.push(unlocksItem);\n    });\n    d.unlocks = unlocksHandler;\n  });\n\n  sortedData.displayed = displayed;\n\n  // Label data categories\n  types.forEach((t) => {\n    if (sortedData[t]) {\n      sortedData[t].forEach((d) => {\n        d.cat = t;\n      });\n    }\n  });\n\n  return sortedData;\n}"]},"metadata":{},"sourceType":"module"}